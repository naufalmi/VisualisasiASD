{"version":3,"sources":["Image/pic1.jpg","Image/pic2.jpg","Image/iconAnimation.svg","Image/iconDescription.svg","Image/iconStep.svg","Image/study.svg","Image/WebLogo1.svg","Component/Home/Home.jsx","Component/Reuseable/Rectangel.jsx","Component/StrukturData/Stack.jsx","Component/StrukturData/Queue.jsx","Component/StrukturData/PriorityQueue.jsx","Component/Reuseable/Node.jsx","Component/StrukturData/DoublyLinkedList.jsx","Component/Searching/BinarySearch.jsx","Component/Searching/SequentialSearch.jsx","Component/Sort/InsertionSort.jsx","Component/Sort/QuickSort.jsx","Component/Sort/MergeSort.jsx","Image/nomatch.svg","NoMatch.jsx","Component/Reuseable/NavigationBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","Jumbotron","fluid","Container","Row","Col","md","span","offset","href","lg","Image","src","iconAnimation","iconStep","iconDescription","id","Card","classname","style","width","Img","variant","study","Body","Title","Text","pic","roundedCircle","pic2","icon","faEnvelope","size","Rectangel","props","state","x","val","color","h","scale","this","setState","from","backgroundColor","height","transform","to","config","duration","Component","Stack","useState","arrayBox","setArrayBox","index","setIndex","desk","setDesk","penjelasan","setPenjelasan","input","setInput","transition","useTransition","item","opacity","enter","indexOf","leave","ubahPenjelasan","method","value","length","map","key","div","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","Append","Button","disabled","onClick","newArr","alert","push","pop","Queue","box","setBox","dequeue","a","newBox","slice","update","tenstion","friction","mass","PriorityQueue","sort","b","reverse","console","log","Node","prev","next","DoublyLinkedList","items","setItems","newItems","splice","inputArr","split","parseInt","BinarySearch","default","checked","identify","itIs","itemz","setItemz","disable","setDisable","disable2","setDisable2","delay","pro","setPro","text","colorText","pseudocode","setPseudocode","pseudocodeIT","setPseudocodeIT","highLightPseudocode","arr","idx","Promise","resolve","setTimeout","i","highLightPseudocodeIT","code","boxVal","transitionPseudo","background","transitionPseudoIT","transition2","changeSatu","changeColor","array","startIndex","endIndex","binarySearch","start","end","count","newPseudo","newPseudoIT","middle","Math","floor","newArray","tempInput","tempIsSorted","JSON","stringify","SequentialSearch","idx1","sequentialSearch","newPseudocodeIT","InsertionSort","box1","box2","tension","sorted","swapping","e1","e2","insertionSort","j","isNaN","QuickSort","val1","val2","partition","pivotValue","pivotIndex","quickSortIterative","stack","MergeSort","auxItems","setAux","iteratorAuxAnim","setIteratorAux","idx2","transitionAux","resetAux","iterativeMergeSort","len","result","buffer","leftStart","left","right","min","leftLimit","rightLimit","Array","NoMatch","nomatch","NavigationBar","show","setShow","Navbar","bg","expand","Brand","logo","alt","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","ListGroup","Badge","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8ee07b29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pic1.9d6d1c4e.jpg\";","export default __webpack_public_path__ + \"static/media/pic2.607938be.jpg\";","export default __webpack_public_path__ + \"static/media/iconAnimation.71997e1e.svg\";","export default __webpack_public_path__ + \"static/media/iconDescription.95a9e7c4.svg\";","export default __webpack_public_path__ + \"static/media/iconStep.ff6ab068.svg\";","export default __webpack_public_path__ + \"static/media/study.7659d534.svg\";","export default __webpack_public_path__ + \"static/media/WebLogo1.427e4b82.svg\";","import React from \"react\";\r\nimport { Container, Jumbotron, Row, Col, Image, Card } from \"react-bootstrap\";\r\nimport \"../style.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport pic from \"../../Image/pic1.jpg\";\r\nimport pic2 from \"../../Image/pic2.jpg\";\r\nimport iconAnimation from \"../../Image/iconAnimation.svg\";\r\nimport iconDescription from \"../../Image/iconDescription.svg\";\r\nimport iconStep from \"../../Image/iconStep.svg\";\r\nimport study from \"../../Image/study.svg\";\r\nimport logo from \"../../Image/WebLogo1.svg\";\r\n\r\nexport const Home = () => (\r\n  // ====JUMBOTRON====\r\n  <div className=\"homeBody\">\r\n    <Jumbotron className=\"Jumbotron\" fluid>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"contentJumbo\" md={{ span: 4, offset: 8 }}>\r\n            <h1>Visualisasi ASD</h1>\r\n            <p>Website ini merupakan Website yang membuat visualisasi dari algoritma dan struktur data yang ada pada mata kuliah Algoritma dan Struktur Data.</p>\r\n\r\n            <a className=\"tombolLink\" href=\"#/Stack\">\r\n              MULAI BELAJAR\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n    {/* ISI KONTENT */}\r\n    <Container className=\"Content\">\r\n      {/*==== CTA 1 ==== */}\r\n      <div className=\"ctaCont\">\r\n        <Row className=\"justify-content-md-center \">\r\n          <Col className=\"cta\" lg=\"3\">\r\n            <Image className=\"ctaImage\" src={iconAnimation} />\r\n            <div>\r\n              <h5>Animasi</h5>\r\n              <p>Algoritma dan struktur data dijelaskan menggunakan animasi</p>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"cta\" lg=\"3\">\r\n            <Image className=\"ctaImage\" src={iconStep} />\r\n            <div>\r\n              <h5>Langkah-langkah</h5>\r\n              <p>Animasi akan dilihatkan langkah demi langkah beserta pseudocode</p>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"cta\" lg=\"3\">\r\n            <Image className=\"ctaImage\" src={iconDescription} />\r\n            <div>\r\n              <h5>Penjelasan</h5>\r\n              <p>Setiap langkah yang diambil diberikan penjelasan</p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      {/* ===== CARDS ===== */}\r\n      <Row className=\"justify-content-md-center cardCont\" id=\"materi\">\r\n        <h2>Materi Struktur Data</h2>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col lg=\"3\" className=\"kartu\">\r\n          <Card classname=\"Card\" style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={study} />\r\n            <Card.Body>\r\n              <Card.Title>Queue</Card.Title>\r\n              <Card.Text>Mempelajari berbagai method dari struktur data queue beserta animasinya</Card.Text>\r\n              <a className=\"btnPrimary\" href=\"#/Queue\">\r\n                PELAJARI\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg=\"3\" className=\"kartu\">\r\n          <Card style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={study} />\r\n            <Card.Body>\r\n              <Card.Title>Stack</Card.Title>\r\n              <Card.Text>Mempelajari berbagai method dari struktur data stack beserta animasinya</Card.Text>\r\n              <a className=\"btnPrimary\" href=\"#/Stack\">\r\n                PELAJARI\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg=\"3\" className=\"kartu\">\r\n          <Card style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={study} />\r\n            <Card.Body>\r\n              <Card.Title>Doubly Linked List</Card.Title>\r\n              <Card.Text>Mempelajari berbagai method dari struktur data Doubly Linked List beserta animasinya</Card.Text>\r\n              <a className=\"btnPrimary\" href=\"#/DoublyLinkedList\">\r\n                PELAJARI\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-md-center cardCont\" id=\"materi\">\r\n        <h2>Materi Algoritma Sorting</h2>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col lg=\"3\" className=\"kartu\">\r\n          <Card classname=\"Card\" style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={study} />\r\n            <Card.Body>\r\n              <Card.Title>Insertion Sort</Card.Title>\r\n              <Card.Text>Mempelajari cara kerja algoritma Insertion Sort melihat beserta animasinya</Card.Text>\r\n              <a className=\"btnPrimary\" href=\"#/InsertionSort\">\r\n                PELAJARI\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg=\"3\" className=\"kartu\">\r\n          <Card style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={study} />\r\n            <Card.Body>\r\n              <Card.Title>Quick Sort</Card.Title>\r\n              <Card.Text>Mempelajari cara kerja algoritma Quick Sort beserta melihat animasinya</Card.Text>\r\n              <a className=\"btnPrimary\" href=\"#/QuickSort\">\r\n                PELAJARI\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col lg=\"3\" className=\"kartu\">\r\n          <Card style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={study} />\r\n            <Card.Body>\r\n              <Card.Title>Merge Sort</Card.Title>\r\n              <Card.Text>Mempelajari cara kerja algoritma Merge Sort beserta melihat animasinya</Card.Text>\r\n              <a className=\"btnPrimary\" href=\"#/MergeSort\">\r\n                PELAJARI\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-md-center cardCont\" id=\"materi\">\r\n        <h2>Materi Algoritma Searching</h2>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col lg=\"3\" className=\"kartu\">\r\n          <Card classname=\"Card\" style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={study} />\r\n            <Card.Body>\r\n              <Card.Title>Sequential Search</Card.Title>\r\n              <Card.Text>Mempelajari cara kerja algoritma Sequential Search beserta animasinya</Card.Text>\r\n              <a className=\"btnPrimary\" href=\"#/SequentialSearch\">\r\n                PELAJARI\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg=\"3\" className=\"kartu\">\r\n          <Card style={{ width: \"18rem\" }}>\r\n            <Card.Img variant=\"top\" src={study} />\r\n            <Card.Body>\r\n              <Card.Title>Binary Search</Card.Title>\r\n              <Card.Text>Mempelajari cara kerja algoritma Binary Search beserta melihat animasinya</Card.Text>\r\n              <a className=\"btnPrimary\" href=\"#/BinarySearch\">\r\n                PELAJARI\r\n              </a>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n    {/* ==== CTA 2 ==== */}\r\n    <div className=\"ctaQuotes\">\r\n      <Container>\r\n        <Row className=\"justify-content-md-center \">\r\n          <Col className=\"quotes\" lg=\"4\">\r\n            <h4>“The greatest enemy of knowledge is not ignorance, it is the illusion of knowledge.”</h4>\r\n            <p>— Stephen Hawking</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n\r\n    <Container className=\"Content\">\r\n      {/* ====INFO PEMBUAT==== */}\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col className=\"infoContent\" lg=\"9\">\r\n          <Row className=\"justify-content-md-center info\">\r\n            <Col lg=\"7\">\r\n              <span>HUH4902</span>\r\n              <p>Pada skripsi dengan kode HUH4902 akan dibuat sebuah media belajar tambahan untuk mata kuliah Algoritma dan Struktur Data (ASD). Media belajar ini akan menampilan animasi dari materi ASD yang sudah terpilih.</p>\r\n              <hr />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"author\">\r\n            <Col md={{ span: 7, offset: 1 }}>\r\n              <Image src={pic} className=\"profile\" roundedCircle></Image>\r\n              <div className=\"infoAuthor\">\r\n                <span>Naufal Muhammad Irsyad</span>\r\n                <p>Mahasiswa Teknik Informatika</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"author\">\r\n            <Col md={{ span: 7, offset: 1 }}>\r\n              <Image src={pic2} className=\"profile\" roundedCircle></Image>\r\n              <div className=\"infoAuthor\">\r\n                <span>Husnul Hakim, S.Kom., M.T.</span>\r\n                <p>Dosen Teknik Informatika</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n    {/* ===FOOTER=== */}\r\n    <Container fluid>\r\n      <Row className=\"justify-content-md-center footer\">\r\n        <Col className=\"footerContent\" lg=\"2\">\r\n          <h5>Visualisasi ASD</h5>\r\n          <p>Website ini adalah tugas skripsi Naufal Muhammad Irsyad</p>\r\n        </Col>\r\n\r\n        <Col className=\"footerContent\" lg=\"2\">\r\n          <h5>Credit</h5>\r\n          <a href=\"https://www.drawkit.io/product/education-free-vector-illustrations\">Ilustrasi</a>\r\n          <br />\r\n          <a href=\"https://www.flaticon.com/\">Ikon</a>\r\n        </Col>\r\n\r\n        <Col className=\"footerContent\" lg=\"2\">\r\n          <h5>Kontak</h5>\r\n          <a href=\"https://mail.google.com/mail\">\r\n            <FontAwesomeIcon icon={faEnvelope} size=\"lg\" />\r\n          </a>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport \"../style.css\";\r\n\r\nexport default class Rectangel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: props.id,\r\n      val: props.val,\r\n      color: props.color,\r\n      h: props.h,\r\n      scale: props.scale,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.setState({ color: props.color, scale: props.scale, val: props.val, h: props.h });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Spring\r\n        // SETTING ANIMASI\r\n        from={\r\n          this.state.color === \"white\" && this.state.h === \"square\"\r\n            ? { backgroundColor: \"white\", color: \"black\", height: 50, width: 50, transform: \"scale(\" + this.state.scale + \")\" }\r\n            : { backgroundColor: this.state.color, height: this.state.h, width: 50, color: \"black\", transform: \"scale(\" + this.state.scale + \")\" }\r\n        }\r\n        //  TRANSISI KE STYLE YANG DIINGINKAN\r\n        to={\r\n          this.state.color === \"white\" && this.state.h === \"square\"\r\n            ? { backgroundColor: \"rgb(\" + this.state.x * 15 + \",\" + this.state.x * 15 + \",\" + this.state.x * 15 + \")\", color: \"white\", height: 50, width: 50, transform: \"scale(\" + this.state.scale + \")\" }\r\n            : { backgroundColor: this.state.color, transform: \"scale(\" + this.state.scale + \")\" }\r\n        }\r\n        // KONFIGURASI ANIMASI\r\n        config={this.state.color === \"white\" && this.state.h === \"square\" ? { duration: 200000 } : { duration: 200 }}\r\n      >\r\n        {/* MAPPING ANIMASI */}\r\n        {(props) => (\r\n          <div className=\"rectangel\" style={props}>\r\n            <h5>{this.state.val}</h5>\r\n          </div>\r\n        )}\r\n      </Spring>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport Rectangel from \"../Reuseable/Rectangel\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport \"../style.css\";\r\n\r\nexport default function Stack() {\r\n  // Array box\r\n  const [arrayBox, setArrayBox] = useState([]);\r\n  // Mencatat Index Keberapa\r\n  let [index, setIndex] = useState(0);\r\n  // Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n  // Penampung Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n  // PENAMPUNG INPUT\r\n  const [input, setInput] = useState(\"\");\r\n  // METHOD UNTUK HANDLING INPUT\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  // Method Push\r\n  const pushBox = () => {\r\n    let newArr = [...arrayBox];\r\n    if (newArr.length > 7) {\r\n      alert(\"OOOPS..STACK SUDAH PENUH\");\r\n    } else {\r\n      newArr.push({ id: index, val: input, color: \"white\", h: \"square\", scale: 1 });\r\n      setIndex((index += 1));\r\n      setDesk(\"PUSH\");\r\n      ubahPenjelasan(\"PUSH\", input);\r\n      setInput(\"\");\r\n      setArrayBox(newArr);\r\n    }\r\n  };\r\n\r\n  // Method Pop\r\n  const popBox = () => {\r\n    let newArr = [...arrayBox];\r\n    setDesk(\"POP\");\r\n    if (newArr.length) {\r\n      ubahPenjelasan(\"POP\", arrayBox[arrayBox.length - 1].val);\r\n      newArr.pop();\r\n      setArrayBox(newArr);\r\n    } else {\r\n      ubahPenjelasan(\"POP\", null);\r\n    }\r\n  };\r\n\r\n  // METHOD PEEK\r\n  const peek = () => {\r\n    setDesk(\"PEEK\");\r\n    if (arrayBox.length) {\r\n      ubahPenjelasan(\"PEEK\", arrayBox[arrayBox.length - 1].val);\r\n    } else {\r\n      ubahPenjelasan(\"PEEK\", null);\r\n    }\r\n  };\r\n\r\n  // METHOD ISEMPTY\r\n  const empty = () => {\r\n    setDesk(\"EMPTY\");\r\n    ubahPenjelasan(\"EMPTY\", \"\");\r\n  };\r\n\r\n  // PENGATURAN TRANSISI ANIMASI KOTAK\r\n  const transition = useTransition(arrayBox, (item) => item.id, {\r\n    from: { transform: \"translate3d(0%, \" + index * -100 + \"px,0)\", opacity: 0 },\r\n    enter: (item) => [{ transform: \"translate3d(0%,\" + arrayBox.indexOf(item) * -60 + \"px,0)\", opacity: 1 }],\r\n    leave: { transform: \"translate3d(0%,\" + index * -60 + \"px,0)\", opacity: 0 },\r\n  });\r\n\r\n  // METHOD UNTUK MEBERIKAN PENJELASAN\r\n  const ubahPenjelasan = (method, value) => {\r\n    if (method === \"POP\") {\r\n      value == null ? setPenjelasan(\"Tidak ada yang bisa dikeluarkan dari tumpukan, karena tidak ada tumpukan kotak\") : setPenjelasan(\"Kotak dengan nilai \" + value + \" dikeluarkan dari tumpukan\");\r\n    } else if (method === \"PUSH\") {\r\n      setPenjelasan(\"Kotak dengan nilai \" + value + \" dimasukan kedalam tumpukan\");\r\n    } else if (method === \"PEEK\") {\r\n      value == null ? setPenjelasan(\"Tidak ada tumpukan kotak, tidak ada nilai yang dikembalikan\") : setPenjelasan(\"Kotak paling atas dari tumpukan bernilai \" + value);\r\n    } else if ((method = \"EMPTY\")) {\r\n      setPenjelasan(arrayBox.length <= 0 ? \"Tumpukan Kosong\" : \"Ada tumpukan kotak\");\r\n    } else {\r\n      setPenjelasan(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimation\" lg=\"9\">\r\n            <div className=\"mainAnimationAreaStack\">\r\n              {transition.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                <div className=\"itemMethod\">\r\n                  <h6>Push(int Elemen)</h6>\r\n                  <p>Memasukan sebuah elemen kedalam tumpukan</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>Pop()</h6>\r\n                  <p>Mengeluarkan elemen teratas dari tumpukan</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>Peek()</h6>\r\n                  <p>Melihat nilai dari elemen teratas di sebuah antrian</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>isEmpty()</h6>\r\n                  <p>Melakukan cek apakah tumpukan kosong atau tidak</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={pushBox} variant=\"dark\">\r\n                      Push\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={popBox}>\r\n                      Pop\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={peek}>\r\n                      Peek\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={empty}>\r\n                      isEmpty\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#272727\" h={30} scale={1} />\r\n                <p> Kotak Lama</p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#fff\" h={30} scale={1} />\r\n                <p> Kotak Baru</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeori\">\r\n              <h1>Stack</h1>\r\n              <p>\r\n                Stack adalah salah satu struktur data yang digunakan untuk menyimpan sekumpulan objek ataupun variabel. Sesuai namanya yaitu stack, tidak heran apabila objek yang terkumpul terlihat seperti tumpukan. Nah, karakteristik stack\r\n                sendiri bersifat LIFO (last in first out). Artinya, data yang terakhir masuk merupakan data yang akan keluar terlebih dahulu. Seperti halnya tumpukan pada umumnya, misalnya tumpukan buku, yang di atas atau yang terakhir\r\n                masuk harus dikeluarkan terlebih dahulu untuk mendapatkan buku yang berada di tumpukan bawah.\r\n              </p>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi struktur data lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/Queue\">Queue</Button>\r\n            <Button href=\"#/DoublyLinkedList\">Doubly LinkedList</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport Rectangel from \"../Reuseable/Rectangel\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport \"../style.css\";\r\n\r\n// CLASS QUEUE SUDAH FUNGSIONAL TINGGAL TAMBAHIN DESKRIPSI\r\n\r\nexport default function Queue() {\r\n  // Array box\r\n  const [box, setBox] = useState([]);\r\n  // Mencatat Index Keberapa\r\n  let [index, setIndex] = useState(0);\r\n  // Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n  // Penampung Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n  // PENAMPUNG INPUT\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  // METHODE ENQUEUE\r\n  const enqueue = () => {\r\n    let newBox = [...box];\r\n    if (newBox.length > 9) {\r\n      alert(\"OOOPS.. QUEUE SUDAH PENUH\");\r\n    } else {\r\n      newBox.push({ id: index, val: input, color: \"white\", h: \"square\", scale: 1 });\r\n      setDesk(\"ENQUEUE\");\r\n      setBox(newBox);\r\n      setInput(\"\");\r\n      ubahPenjelasan(\"ENQUEUE\", input);\r\n      setIndex((index += 1));\r\n    }\r\n  };\r\n\r\n  // METHOD DEQUEUE\r\n  const dequeue = async () => {\r\n    if (box.length) {\r\n      setDesk(\"DEQUEUE\");\r\n      ubahPenjelasan(\"DEQUEUE\", box[0].val);\r\n      let newBox = box.slice(1, box.length);\r\n      setBox(newBox);\r\n    } else {\r\n      setDesk(\"DEQUEUE\");\r\n      ubahPenjelasan(\"DEQUEUE\", null);\r\n    }\r\n    // setIndex((index -= 1));\r\n  };\r\n\r\n  const peek = () => {\r\n    setDesk(\"PEEK\");\r\n    if (box.length) {\r\n      ubahPenjelasan(\"PEEK\", box[0].val);\r\n    } else {\r\n      ubahPenjelasan(\"PEEK\", null);\r\n    }\r\n  };\r\n\r\n  const empty = () => {\r\n    setDesk(\"EMPTY\");\r\n    ubahPenjelasan(\"EMPTY\", \"\");\r\n  };\r\n\r\n  const transition = useTransition(box, (item) => item.id, {\r\n    from: { transform: \"translateX(\" + index * 100 + \"px)\", opacity: 1 },\r\n    enter: (item) => [{ transform: \"translateX(\" + box.indexOf(item) * 60 + \"px)\", opacity: 1 }],\r\n    update: (item) => [{ transform: \"translateX(\" + box.indexOf(item) * 60 + \"px)\", opacity: 1 }],\r\n    leave: { transform: \"translateX(-100px)\", opacity: 0 },\r\n    config: { tenstion: 500, friction: 20, mass: 1 },\r\n  });\r\n\r\n  // METHOD UNTUK MEBERIKAN PENJELASAN\r\n  const ubahPenjelasan = (method, value) => {\r\n    if (method === \"DEQUEUE\") {\r\n      value == null ? setPenjelasan(\"Tidak ada yang bisa dikeluarkan dari antrian, karena tidak ada antrian kotak\") : setPenjelasan(\"Kotak dengan nilai \" + value + \" Dikeluarkan Dari antrian\");\r\n    } else if (method === \"ENQUEUE\") {\r\n      setPenjelasan(\"Kotak dengan nilai \" + value + \" dimasukan kedalam antrian\");\r\n    } else if (method === \"PEEK\") {\r\n      value == null ? setPenjelasan(\"Tidak ada tumpukan kotak, tidak ada nilai yang dikembalikan\") : setPenjelasan(\"Pada antrian, kotak paling depan bernilai \" + value);\r\n    } else if (method === \"EMPTY\") {\r\n      setPenjelasan(box.length <= 0 ? \"Antrian Kosong\" : \"Ada antrian kotak\");\r\n    } else {\r\n      setPenjelasan(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimation\" lg=\"9\">\r\n            <div className=\"mainAnimationArea\">\r\n              {transition.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n          {/* =========================================================== */}\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                <div className=\"itemMethod\">\r\n                  <h6>Enqueue(int Elemen)</h6>\r\n                  <p>Memasukan sebuah elemen kedalam antrian</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>Dequeue()</h6>\r\n                  <p>Mengeluarkan elemen terdepan dari antrian</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>Peek()</h6>\r\n                  <p>Melihat nilai dari elemen terdepan di sebuah antrian</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>isEmpty()</h6>\r\n                  <p>Melakukan cek apakah antrian kosong atau tidak</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {/* =========================================================== */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={enqueue} variant=\"dark\">\r\n                      Enqueue\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={dequeue}>\r\n                      Dequeue\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={peek}>\r\n                      Peek\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={empty}>\r\n                      isEmpty\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#272727\" h={30} scale={1} />\r\n                <p> Kotak Lama</p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#fff\" h={30} scale={1} />\r\n                <p> Kotak Baru</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeori\">\r\n              <h1>Queue</h1>\r\n              <p>\r\n                Queue (antrian) adalah barisan elemen/data dimana proses memasukkan/menambah elemen/data dilakukan pada posisi belakang (rear) dan proses mengeluarkan/mengambil elemen/data dilakukan pada elemen/data di posisi depan (front)\r\n                FIFO.\r\n              </p>\r\n              {/* <div>\r\n                <h5>Kompleksitas</h5>\r\n                <p>Best Case</p>\r\n              </div> */}\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi struktur data lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/Stack\">Stack</Button>\r\n            <Button href=\"#/DoublyLinkedList\">Doubly LinkedList</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport Rectangel from \"../Reuseable/Rectangel\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport \"../style.css\";\r\n\r\n// CLASS QUEUE SUDAH FUNGSIONAL TINGGAL TAMBAHIN DESKRIPSI\r\n\r\nexport default function PriorityQueue() {\r\n  // Array box\r\n  const [box, setBox] = useState([]);\r\n  // Mencatat Index Keberapa\r\n  let [index, setIndex] = useState(0);\r\n  // Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n  // Penampung Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n  // PENAMPUNG INPUT\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  // METHODE ENQUEUE\r\n  const enqueue = () => {\r\n    let newBox = box;\r\n    newBox.push({ id: index, val: input, color: \"white\", h: \"square\", scale: 1 });\r\n    newBox.sort((a, b) => {\r\n      return a.val - b.val;\r\n    });\r\n    newBox.reverse();\r\n    setDesk(\"ENQUEUE\");\r\n    setBox([...newBox]);\r\n    setInput(\"\");\r\n    ubahPenjelasan(\"ENQUEUE\", input);\r\n    setIndex((index += 1));\r\n    console.log(box);\r\n  };\r\n\r\n  // METHOD DEQUEUE\r\n  const dequeue = async () => {\r\n    if (box.length) {\r\n      setDesk(\"DEQUEUE\");\r\n      ubahPenjelasan(\"DEQUEUE\", box[0].val);\r\n      let newBox = box.slice(1, box.length);\r\n      setBox(newBox);\r\n    } else {\r\n      setDesk(\"DEQUEUE\");\r\n      ubahPenjelasan(\"DEQUEUE\", null);\r\n    }\r\n    // setIndex((index -= 1));\r\n  };\r\n\r\n  const peek = () => {\r\n    setDesk(\"PEEK\");\r\n    if (box.length) {\r\n      ubahPenjelasan(\"PEEK\", box[0].val);\r\n    } else {\r\n      ubahPenjelasan(\"PEEK\", null);\r\n    }\r\n  };\r\n\r\n  const empty = () => {\r\n    setDesk(\"EMPTY\");\r\n    ubahPenjelasan(\"EMPTY\", \"\");\r\n  };\r\n\r\n  const transition = useTransition(box, (item) => item.id, {\r\n    from: { transform: \"translateX(\" + index * 100 + \"px)\", opacity: 1 },\r\n    enter: (item) => [{ transform: \"translateX(\" + box.indexOf(item) * 60 + \"px)\", opacity: 1 }],\r\n    update: (item) => [{ transform: \"translateX(\" + box.indexOf(item) * 60 + \"px)\", opacity: 1 }],\r\n    leave: { transform: \"translateX(-100px)\", opacity: 0 },\r\n    config: { tenstion: 500, friction: 20, mass: 1 },\r\n  });\r\n\r\n  // METHOD UNTUK MEBERIKAN PENJELASAN\r\n  const ubahPenjelasan = (method, value) => {\r\n    if (method === \"DEQUEUE\") {\r\n      value == null ? setPenjelasan(\"Tidak ada yang bisa dikeluarkan dari antrian, karena tidak ada antrian kotak\") : setPenjelasan(\"Kotak dengan nilai \" + value + \" Dikeluarkan Dari antrian\");\r\n    } else if (method === \"ENQUEUE\") {\r\n      setPenjelasan(\"Kotak dengan nilai \" + value + \" dimasukan kedalam Array\");\r\n    } else if (method === \"PEEK\") {\r\n      value == null ? setPenjelasan(\"Tidak ada tumpukan kotak, tidak ada nilai yang dikembalikan\") : setPenjelasan(\"Pada antrian, kotak paling depan bernilai \" + value);\r\n    } else if (method === \"EMPTY\") {\r\n      setPenjelasan(box.length <= 0 ? \"Antrian Kosong\" : \"Ada antrian kotak\");\r\n    } else {\r\n      setPenjelasan(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimation\" lg=\"9\">\r\n            <div className=\"mainAnimationArea\">\r\n              {transition.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n          {/* =========================================================== */}\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                <div className=\"itemMethod\">\r\n                  <h6>Enqueue(int Elemen)</h6>\r\n                  <p>Memasukan sebuah elemen kedalam antrian</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>Dequeue()</h6>\r\n                  <p>Mengeluarkan elemen terdepan dari antrian</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>Peek()</h6>\r\n                  <p>Melihat nilai dari elemen terdepan di sebuah antrian</p>\r\n                </div>\r\n                <div className=\"itemMethod\">\r\n                  <h6>isEmpty()</h6>\r\n                  <p>Melakukan cek apakah antrian kosong atau tidak</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {/* =========================================================== */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={enqueue} variant=\"dark\">\r\n                      Enqueue\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={dequeue}>\r\n                      Dequeue\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={peek}>\r\n                      Peek\r\n                    </Button>\r\n                    <Button variant=\"outline-secondary\" onClick={empty}>\r\n                      isEmpty\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#272727\" h={30} scale={1} />\r\n                <p> Kotak Lama</p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#fff\" h={30} scale={1} />\r\n                <p> Kotak Baru</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeori\">\r\n              <h1>Priority Queue</h1>\r\n              <p>\r\n                Queue (antrian) adalah barisan elemen/data dimana proses memasukkan/menambah elemen/data dilakukan pada posisi belakang (rear) dan proses mengeluarkan/mengambil elemen/data dilakukan pada elemen/data di posisi depan (front)\r\n                FIFO. Dalam Priority Queue, elemen dengan prioritas paling besar akan dilayani sebelum elemen dengan prioritas kecil.\r\n              </p>\r\n              {/* <div>\r\n                <h5>Kompleksitas</h5>\r\n                <p>Best Case</p>\r\n              </div> */}\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi struktur data lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/Stack\">Stack</Button>\r\n            <Button href=\"#/DoublyLinkedList\">Doubly LinkedList</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport \"../style.css\";\r\n\r\nexport default class Node extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      prev: props.prev,\r\n      val: props.val,\r\n      next: props.next,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.setState({ prev: props.prev, next: props.next });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"node\">\r\n        {/* PREV */}\r\n        <Col md=\"4\" className=\"colNode\">\r\n          {this.state.prev == null ? \"\" : <h6>PREV</h6>}\r\n        </Col>\r\n        {/* VALUE */}\r\n        <Col md=\"4\" className=\"colNode\">\r\n          <h6>{this.state.val}</h6>\r\n        </Col>\r\n        {/* NEXT */}\r\n        <Col md=\"4\" className=\"colNode\">\r\n          {this.state.next == null ? \"\" : <h6>NEXT</h6>}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport Node from \"../Reuseable/Node\";\r\nimport \"../style.css\";\r\n\r\n// CLASS DOUBLY LINKED LIST YANG SUDAH FIX (SUDAH BERFUNGSI SEMUA KECUALI TAMPILAN BELUM SESUAI)\r\nexport default function DoublyLinkedList() {\r\n  // State untuk items (box)\r\n  const [items, setItems] = useState([]);\r\n  // Mencatat Index Keberapa\r\n  let [index, setIndex] = useState(0);\r\n  // Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n  // Penampung Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n  // PENAMPUNG INPUT\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  // METHOD ADD AFTER\r\n  const AddEnd = () => {\r\n    let newItems = [...items];\r\n    if (newItems.length <= 0) {\r\n      newItems.push({ id: index, val: input, prev: null, next: null });\r\n    } else {\r\n      newItems.push({ id: index, val: input, prev: \"ADA\", next: null });\r\n      newItems[newItems.length - 2].next = \"ADA\";\r\n    }\r\n    setInput(\"\");\r\n    setDesk(\"ADD END\");\r\n    ubahPenjelasan(\"ADDEND\", input);\r\n    setIndex((index += 1));\r\n    setItems(newItems);\r\n  };\r\n\r\n  // METHOD ADD AFTER\r\n  const AddFront = () => {\r\n    let newItems = items;\r\n    if (newItems.length <= 0) {\r\n      newItems.push({ id: index, val: input, prev: null, next: null });\r\n    } else {\r\n      newItems.splice(0, 0, { id: index, val: input, prev: null, next: \"ADA\" });\r\n      newItems[1].prev = \"ADA\";\r\n    }\r\n    setInput(\"\");\r\n    setDesk(\"ADD FRONT\");\r\n    ubahPenjelasan(\"ADDFRONT\", input);\r\n    setIndex((index += 1));\r\n    setItems([...newItems]);\r\n  };\r\n\r\n  // METHOD ADD AFTER\r\n  const AddAfter = () => {\r\n    let inputArr = input.split(\",\");\r\n    let newItems = [...items];\r\n\r\n    console.log(inputArr.length);\r\n    if (inputArr.length < 2) {\r\n      alert(\"INPUT MEMILIKI 2 PARAMETER YAITU, NODE SEBELUM DAN NILAI NODE BARU. CONTOH INPUT YANG BENAR : 1,2 \");\r\n    } else if (inputArr[0] > newItems.length) {\r\n      alert(\"NODE KE-\" + inputArr[0] + \" TIDAK ADA DALAM LIST\");\r\n    } else if (newItems.length > parseInt(inputArr[0])) {\r\n      newItems.splice(parseInt(inputArr[0]), 0, { id: index, val: inputArr[1], prev: \"ADA\", next: \"ADA\" });\r\n    } else {\r\n      newItems.splice(parseInt(inputArr[0]), 0, { id: index, val: inputArr[1], prev: \"ADA\", next: null });\r\n      newItems[parseInt(inputArr[0]) - 1].next = \"ADA\";\r\n    }\r\n    setInput(\"\");\r\n    setDesk(\"ADD AFTER\");\r\n    ubahPenjelasan(\"ADDAFTER\", inputArr[1]);\r\n    setIndex((index += 1));\r\n    setItems(newItems);\r\n  };\r\n\r\n  // METHOD DELETE END\r\n  const DeleteEnd = () => {\r\n    let newItems = [...items];\r\n    newItems.pop();\r\n    if (newItems.length) {\r\n      newItems[newItems.length - 1].next = null;\r\n    }\r\n    setInput(\"\");\r\n    setDesk(\"DELETE END\");\r\n    ubahPenjelasan(\"DELETEEND\", null);\r\n    setItems(newItems);\r\n  };\r\n\r\n  // METHOD DELETE FIRST\r\n  const DeleteFirst = () => {\r\n    let newItems = [...items];\r\n    newItems.splice(0, 1);\r\n    if (newItems.length > 0) {\r\n      newItems[0].prev = null;\r\n    }\r\n    setInput(\"\");\r\n    setDesk(\"DELETE FIRST\");\r\n    ubahPenjelasan(\"DELETEFIRST\", null);\r\n    setItems(newItems);\r\n  };\r\n\r\n  // METHOD DELETE AFTER\r\n  const DeleteAfter = () => {\r\n    let newItems = [...items];\r\n    if (input === \"\") {\r\n      alert(\"ISI INPUT TERLEBIH DAHULU\");\r\n    } else if (parseInt(input) + 1 > newItems.length) {\r\n      alert(\"TIDAK ADA NODE SETELAH NODE KE-\" + input + \"\");\r\n    } else if (newItems.length === parseInt(input) + 1) {\r\n      newItems.splice(parseInt(input), 1);\r\n      newItems[newItems.length - 1].next = null;\r\n    } else {\r\n      newItems.splice(parseInt(input), 1);\r\n    }\r\n    setInput(\"\");\r\n    setDesk(\"DELETE AFTER\");\r\n    ubahPenjelasan(\"DELETEAFTER\", null);\r\n    setItems(newItems);\r\n  };\r\n\r\n  //  Pengaturan Transisi\r\n  const transition = useTransition(items, (item) => item.id, {\r\n    from: { transform: \"translateY(-100px)\", opacity: 0 },\r\n    enter: { transform: \"translateY(0px)\", opacity: 1 },\r\n    update: { transform: \"translateY(0px)\", opacity: 1 },\r\n    leave: { transform: \"translateY(100px)\", opacity: 0 },\r\n    config: { tenstion: 500, friction: 20, mass: 2 },\r\n  });\r\n\r\n  // METHOD UNTUK MEBERIKAN PENJELASAN\r\n  const ubahPenjelasan = (method, value) => {\r\n    if (method === \"ADDFRONT\") {\r\n      setPenjelasan(\"Menambah node dengan nilai \" + value + \" melalui head\");\r\n    } else if (method === \"ADDEND\") {\r\n      setPenjelasan(\"Menambah node dengan nilai \" + value + \" melalui tail\");\r\n    } else if (method === \"ADDAFTER\") {\r\n      setPenjelasan(\"Menyisipkan node dengan nilai \" + value + \" melalui node lain\");\r\n    } else if (method === \"DELETEEND\") {\r\n      setPenjelasan(\"Menghapus node terakhir\");\r\n    } else if (method === \"DELETEFIRST\") {\r\n      setPenjelasan(\"Menghapus node terdepan atau head\");\r\n    } else if (method === \"DELETEAFTER\") {\r\n      setPenjelasan(\"Menghapus node melalui node lain\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimationDLL\" lg=\"9\">\r\n            {transition.map(({ item, props, key }) => (\r\n              <animated.div className=\"contNode\" key={key} style={props}>\r\n                <h6>{items.indexOf(item) === 0 ? \"Head \" : \"\"}</h6>\r\n                <h6>{items.indexOf(item) === items.length - 1 ? \"Tail\" : \"\"}</h6>\r\n                <Node id={item.id} val={item.val} prev={item.prev} next={item.next} />\r\n              </animated.div>\r\n            ))}\r\n          </Col>\r\n          {/* =========================================================== */}\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                <div className=\"itemMethod\">\r\n                  <h6>Add First(int new_data)</h6>\r\n                  <p>Menambahkan node melalui Head</p>\r\n                </div>\r\n\r\n                <div className=\"itemMethod\">\r\n                  <h6>Add End(int new_data)</h6>\r\n                  <p>Menambahkan node melalui tail</p>\r\n                </div>\r\n\r\n                <div className=\"itemMethod\">\r\n                  <h6>Add After(node PrevNode,int new_data)</h6>\r\n                  <p>Menyisipkan node diantara node lainnya </p>\r\n                </div>\r\n\r\n                <div className=\"itemMethod\">\r\n                  <h6>Delete First()</h6>\r\n                  <p>Menghapus node melalui head</p>\r\n                </div>\r\n\r\n                <div className=\"itemMethod\">\r\n                  <h6>Delete End()</h6>\r\n                  <p>Menghapus node melalui tail</p>\r\n                </div>\r\n\r\n                <div className=\"itemMethod\">\r\n                  <h6>Delete After(node PrevNode)</h6>\r\n                  <p>Menghapus node melalui node lain</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {/* =========================================================== */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={AddEnd} variant=\"dark\">\r\n                      addEnd\r\n                    </Button>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={AddFront} variant=\"dark\">\r\n                      addFront\r\n                    </Button>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={AddAfter} variant=\"dark\">\r\n                      addAfter\r\n                    </Button>\r\n                    <Button disabled={items.length === 0 ? true : false} onClick={DeleteEnd} variant=\"dark\">\r\n                      deleteEnd\r\n                    </Button>\r\n                    <Button disabled={items.length === 0 ? true : false} onClick={DeleteFirst} variant=\"dark\">\r\n                      deleteFirst\r\n                    </Button>\r\n                    <Button disabled={items.length === 0 ? true : false} onClick={DeleteAfter} variant=\"dark\">\r\n                      deleteAfter\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeoriPendek\">\r\n              <h1>Doubly Linked List</h1>\r\n              <p>Double Linked List adalah linked list dengan node yang memiliki data dan dua buah reference link (biasanya disebut next dan prev) yang menunjuk ke node sebelum dan node sesudahnya.</p>\r\n              <br />\r\n              <h3>Node</h3>\r\n              <div className=\"materiNode\">\r\n                <Node id=\"\" val=\"Node\" prev=\"Prev\" next=\"Next\" />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi struktur data lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/Stack\">Stack</Button>\r\n            <Button href=\"#/Queue\">Queue</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport Rectangel from \"../Reuseable/Rectangel\";\r\nimport \"../style.css\";\r\n\r\nexport default function BinarySearch() {\r\n  // Sebuah object yang menyimpan warna\r\n  const color = { default: \"rgb(173, 173, 173)\", checked: \"rgba(255,255,255,0.6)\", identify: [\"rgb(255, 192, 55)\", \"#fb9b29\", \"#fb8729\"], itIs: \"#3FB1B5\" };\r\n  // STATE UNTUK RECTANGEL CLASS\r\n  const [itemz, setItemz] = useState([]);\r\n  // DISABLE BUTTON\r\n  const [disable, setDisable] = useState(true);\r\n  const [disable2, setDisable2] = useState(true);\r\n  // DELAY\r\n  const [delay, setDelay] = useState(500);\r\n\r\n  // ===================================================\r\n  //  -------- BAGIAN PENJELASAN & PSEUDOCODE ----------\r\n  // ===================================================\r\n\r\n  // PRO BUTTON\r\n  const [pro, setPro] = useState(true);\r\n  // Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n  // Penampung Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n  // PENAMPUNG INPUT\r\n  const [pseudocode, setPseudocode] = useState([\r\n    { id: 0, text: \"mencari nilai yang dicari hingga ketemu atau tidak ada nilai tengah\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"Cek nilai tengah apakah sesuai dengan target?\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"Belum sesuai, cari kesebelah kiri\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"Belum sesuai, cari kesebelah kanan\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 4, text: \"Sudah sesuai, akhiri pencarian\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n\r\n  //>>>>>> state Pseudocode Anak IT\r\n  const [pseudocodeIT, setPseudocodeIT] = useState([\r\n    { id: 0, text: \"start = 1\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"end = array length\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"While start < end\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"___ Middle = (start + end) / 2\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 4, text: \"___  If( Array[Middle] = target)\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 5, text: \"______  return true\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 6, text: \"___  else if (Array[middle] < target)\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 7, text: \"______  start = middle + 1\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 8, text: \"___  else end = middle - 1\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 9, text: \"return false\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n\r\n  // METHOD UNTUK MEN HIGHLIGHT PSEUDOCODE\r\n  const highLightPseudocode = (arr, idx) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // Membuat pseudocode default terlebih dahulu\r\n        for (let i = 0; i < pseudocode.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n          arr[i].scale = 1;\r\n        }\r\n        // Membuat highlight\r\n        arr[idx].color = \"#5a9cff\";\r\n        arr[idx].colorText = \"white\";\r\n        arr[idx].scale = 1.4;\r\n        resolve();\r\n      }, delay);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> method penentu highlight pseudocode\r\n  const highLightPseudocodeIT = (arr, code) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // * pseudocode default terlebih dahulu\r\n        for (let i = 0; i < arr.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n        }\r\n        // * Membuat highlight\r\n\r\n        if (code === 0) {\r\n          arr[0].color = \"#5a9cff\";\r\n          arr[0].colorText = \"white\";\r\n\r\n          arr[1].color = \"#5a9cff\";\r\n          arr[1].colorText = \"white\";\r\n\r\n          arr[2].color = \"#5a9cff\";\r\n          arr[2].colorText = \"white\";\r\n        } else if (code === 1) {\r\n          arr[3].color = \"#5a9cff\";\r\n          arr[3].colorText = \"white\";\r\n\r\n          arr[4].color = \"#5a9cff\";\r\n          arr[4].colorText = \"white\";\r\n        } else if (code === 2) {\r\n          arr[5].color = \"#5a9cff\";\r\n          arr[5].colorText = \"white\";\r\n        } else if (code === 3) {\r\n          arr[6].color = \"#5a9cff\";\r\n          arr[6].colorText = \"white\";\r\n\r\n          arr[7].color = \"#5a9cff\";\r\n          arr[7].colorText = \"white\";\r\n        } else if (code === 4) {\r\n          arr[8].color = \"#5a9cff\";\r\n          arr[8].colorText = \"white\";\r\n        } else {\r\n          arr[9].color = \"#5a9cff\";\r\n          arr[9].colorText = \"white\";\r\n        }\r\n\r\n        resolve();\r\n      }, delay);\r\n    });\r\n  };\r\n\r\n  // METHOD UNTUK MEBERIKAN PENJELASAN\r\n  const ubahPenjelasan = (method, boxVal, target) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (method === \"CEK\") {\r\n          setDesk(\"CEK\");\r\n          setPenjelasan(\"Apakah kotak dengan nilai \" + boxVal + \" sama dengan target (\" + target + \")\");\r\n        } else if (method === \"NEXT1\") {\r\n          setDesk(\"Cek sebelah kiri\");\r\n          setPenjelasan(\"Mencari kotak kesebelah kiri karena target (\" + target + \") yang di cari lebih kecil dibandingkan dengan nilai tengah (\" + boxVal + \")\");\r\n        } else if (method === \"NEXT2\") {\r\n          setDesk(\"Cek sebelah kanan\");\r\n          setPenjelasan(\"Mencari kotak kesebelah kanan karena target (\" + target + \") yang di cari lebih besar dibandingkan dengan nilai tengah (\" + boxVal + \")\");\r\n        } else if (method === \"KETEMU\") {\r\n          setDesk(\"KETEMU\");\r\n          setPenjelasan(\"Kotak dengan nilai \" + boxVal + \" ditemukan dalam array\");\r\n        } else {\r\n          setDesk(\"TIDAK KETEMU\");\r\n          setPenjelasan(\"Tidak ada kotak yang bernilai sesuai target \");\r\n        }\r\n        resolve();\r\n      }, delay);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> pengaturan transisi pseudocode\r\n  const transitionPseudo = useTransition(pseudocode, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // >>>>>>>> pengaturan transisi pseudocode IT\r\n  const transitionPseudoIT = useTransition(pseudocodeIT, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // =============================================================\r\n\r\n  // INPUT\r\n  const [input, setInput] = useState(\"\");\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  // INPUT ARRAY\r\n  const split = () => {\r\n    let tempInput = input.split(\",\");\r\n    let tempIsSorted = [...tempInput];\r\n    tempIsSorted.sort();\r\n    let newArray = [];\r\n    if (JSON.stringify(tempInput) != JSON.stringify(tempIsSorted)) {\r\n      alert(\"MASUKAN INPUT BERUPA KUMPULAN NILAI YANG SUDAH TERURUT. CONTOH : 1,2,3,4,5\");\r\n      setInput(\"\");\r\n    } else {\r\n      setInput(\"\");\r\n      setDisable(false);\r\n      setDisable2(false);\r\n      for (let i = 0; i < tempInput.length; i++) {\r\n        newArray.push({ id: i, val: parseInt(tempInput[i]), color: color.default, h: 50, scale: 1 });\r\n      }\r\n      console.log(newArray);\r\n      setItemz(newArray);\r\n    }\r\n  };\r\n  // ====================\r\n\r\n  //  PENGATURAN TRANSISI\r\n  const transition2 = useTransition(itemz, (item) => item.id, {\r\n    from: { transform: \"translateX(0px)\", opacity: 0 },\r\n    enter: (item) => [{ transform: \"translateX(\" + itemz.indexOf(item) * 60 + \"px)\", opacity: 1 }],\r\n    leave: { opacity: 0 },\r\n  });\r\n\r\n  // Method Merubah warna 1 kotak\r\n  const changeSatu = (arr, idx, color, scale) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        arr[idx].color = color;\r\n        arr[idx].scale = scale;\r\n        resolve();\r\n      }, delay);\r\n    });\r\n  };\r\n\r\n  // Method pengubah warna\r\n  const changeColor = (array, startIndex, endIndex, color, scale) => {\r\n    let i;\r\n    for (i = startIndex; i <= endIndex; i++) {\r\n      array[i].color = color;\r\n      array[i].scale = scale;\r\n    }\r\n  };\r\n\r\n  // MENGEMBALIKAN WARNA MENJADI DEFAULT\r\n  const resetArray = () => {\r\n    let newArray = [...itemz];\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n    for (let i = 0; i < newPseudo.length; i++) {\r\n      newPseudo[i].color = color.default;\r\n      newPseudo[i].colorText = \"black\";\r\n      newPseudo[i].scale = 1;\r\n    }\r\n    for (let i = 0; i < newPseudoIT.length; i++) {\r\n      newPseudoIT[i].color = color.default;\r\n      newPseudoIT[i].colorText = \"black\";\r\n      newPseudoIT[i].scale = 1;\r\n    }\r\n    setDisable(false);\r\n    setDesk(\"\");\r\n    setPenjelasan(\"\");\r\n    setPseudocode([...newPseudo]);\r\n    setPseudocodeIT([...newPseudoIT]);\r\n    changeColor(newArray, 0, newArray.length - 1, color.default, 1);\r\n    setItemz(newArray);\r\n    setInput(\"\");\r\n  };\r\n\r\n  // Method Pencarian Binary Search (PAKE RECTANGEL CLASS)\r\n  const binarySearch = async () => {\r\n    if (input === \"\") {\r\n      alert(\"MASUKAN ANGKA YANG INGIN DICARI\");\r\n    } else {\r\n      setDisable(true);\r\n      let start = 0;\r\n      let end = itemz.length - 1;\r\n      let count = 0;\r\n      let newPseudo = pseudocode;\r\n      let newPseudoIT = pseudocodeIT;\r\n\r\n      // Ubah Highlight Pseudocode\r\n      await highLightPseudocode(newPseudo, 0);\r\n      await highLightPseudocodeIT(newPseudoIT, 0);\r\n      setPseudocodeIT(newPseudoIT);\r\n      setPseudocode([...newPseudo]);\r\n      // ===========\r\n\r\n      while (start <= end) {\r\n        let newItems = [...itemz];\r\n        let middle = Math.floor((start + end) / 2);\r\n\r\n        // Ubah Highlight Pseudocode\r\n        await highLightPseudocodeIT(newPseudoIT, 1);\r\n        await highLightPseudocode(newPseudo, 1);\r\n        await ubahPenjelasan(\"CEK\", newItems[middle].val, input);\r\n        setPseudocode(newPseudo);\r\n        setPseudocodeIT(newPseudoIT);\r\n        // =========================\r\n\r\n        changeColor(newItems, middle, middle, color.checked, 0.7);\r\n        if (newItems[middle].val === parseInt(input)) {\r\n          // NILAI DI TEMUKAN\r\n          // Ubah Highlight Pseudocode\r\n          await highLightPseudocodeIT(newPseudoIT, 2);\r\n          await highLightPseudocode(newPseudo, 4);\r\n          await ubahPenjelasan(\"KETEMU\", newItems[middle].val, \"\");\r\n          setPseudocode(newPseudo);\r\n          setPseudocodeIT(newPseudoIT);\r\n          // ===========================\r\n\r\n          // Ubah Warna\r\n          await changeSatu(newItems, middle, color.itIs, 1.2);\r\n          // ===========================\r\n          return setItemz(newItems);\r\n        } else if (newItems[middle].val < parseInt(input)) {\r\n          // CARI KE KANAN\r\n          start = middle + 1;\r\n          // Ubah Highlight Pseudocode\r\n          await highLightPseudocodeIT(newPseudoIT, 3);\r\n          await highLightPseudocode(newPseudo, 3);\r\n          await ubahPenjelasan(\"NEXT2\", newItems[middle].val, input);\r\n          setPseudocode([...newPseudo]);\r\n          setPseudocodeIT(newPseudoIT);\r\n          // ==========================\r\n          changeColor(newItems, start, end, color.identify[count], 1);\r\n          setItemz(newItems);\r\n        } else {\r\n          // CARI KE KIRI\r\n          end = middle - 1;\r\n          // Ubah Highlight Pseudocode\r\n          await highLightPseudocodeIT(newPseudoIT, 6, null);\r\n          await highLightPseudocode(newPseudo, 2);\r\n          await ubahPenjelasan(\"NEXT1\", newItems[middle].val, input);\r\n          setPseudocode([...newPseudo]);\r\n          setPseudocodeIT(newPseudoIT);\r\n          // ========================\r\n\r\n          changeColor(newItems, start, end, color.identify[count], 1);\r\n          setItemz(newItems);\r\n        }\r\n        count++;\r\n      }\r\n      // Ubah Highlight Pseudocode\r\n      await highLightPseudocodeIT(newPseudoIT, 45);\r\n      setPseudocodeIT(newPseudoIT);\r\n      // target tidak ditemukan\r\n      return ubahPenjelasan(\"\", \"\", \"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimation\" lg=\"9\">\r\n            <div className=\"mainAnimationArea\">\r\n              {transition2.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n          {/* =========================================================== */}\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                <Button onClick={() => setPro(!pro)} variant={pro ? \"dark\" : \"light\"} size=\"sm\">\r\n                  {pro ? \"Pro\" : \"Awam\"}\r\n                </Button>\r\n\r\n                <div className=\"wrapper\">\r\n                  {pro\r\n                    ? // Pseudocode untuk orang IT\r\n                      transitionPseudoIT.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocodeIT\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))\r\n                    : // Pseudocode untuk orang awam\r\n\r\n                      transitionPseudo.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocode\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {/* =========================================================== */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={disable} onClick={binarySearch} variant={itemz.length === 0 ? \"outline-secondary\" : \"dark\"}>\r\n                      Cari\r\n                    </Button>\r\n                    <Button disabled={disable2} onClick={resetArray} variant=\"outline-secondary\">\r\n                      Reset\r\n                    </Button>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={split} variant={itemz.length === 0 ? \"dark\" : \"outline-secondary\"}>\r\n                      Input\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(173, 173, 173)\" h={30} scale={1} />\r\n                <p> Kotak yang tidak di cek</p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(255, 192, 55)\" h={30} scale={1} />\r\n                <p> Wilayah Pencarian</p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#3FB1B5\" h={30} scale={1} />\r\n                <p> Kotak dengan nilai yang dicari</p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#fff\" h={30} scale={1} />\r\n                <p> Nilai Tengah</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeori\">\r\n              <h1>Binary Search</h1>\r\n              <p>\r\n                Binary Search merupakan sebuah teknik pencarian data dengan cara berulang kali membagi separuh dari jumlah data yang dicari sampai sehingga memperkecil lokasi pencarian menjadi satu data. Dengan teknik ini kita akan membuang\r\n                setengah dari jumlah data. Apabila ditemukan kecocokan data maka program akan mengembalikan output, jika tidak pencarian akan terus berlanjut hingga akhir dari pembagian jumlah data tersebut. Algoritma ini biasanya banyak\r\n                digunakan untuk mencari di program dengan jumlah data yang banyak, dimana kompleksitas dari algoritma ini adalah Ο(log n) dimana n adalah jumlah item. Pada saat menggunakan binary search, data yang berada di dalam array\r\n                harus diurutkan terlebih dahulu.\r\n              </p>\r\n              <div>\r\n                <h5>Kompleksitas</h5>\r\n                <p>\r\n                  Best Case : O(1) <br /> Average Case : O(log n){\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi Searching lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/SequentialSearch\">Sequential Search</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport Rectangel from \"../Reuseable/Rectangel\";\r\nimport \"../style.css\";\r\n\r\n// CLASS SEQUENTIAL SEARCH YANG SUDAH FIX (SUDAH BERFUNGSI SEMUA KECUALI TAMPILAN BELUM SESUAI)\r\n// KURANG FUNGSIN SPLIT\r\n\r\nexport default function SequentialSearch() {\r\n  // Sebuah object yang menyimpan warna\r\n  const color = { default: \"rgb(173, 173, 173)\", identify: \"rgb(255, 192, 55)\", itIs: \"#3FB1B5\" };\r\n  // STATE UNTUK RECTANGEL CLASS\r\n  const [itemz, setItemz] = useState([]);\r\n  // DISABLE BUTTON\r\n  const [disable, setDisable] = useState(true);\r\n  const [disable2, setDisable2] = useState(true);\r\n  // ===================================================\r\n  //  -------- BAGIAN PENJELASAN & PSEUDOCODE ----------\r\n  // ===================================================\r\n\r\n  // PRO BUTTON\r\n  const [pro, setPro] = useState(true);\r\n  // Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n  // Penampung Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n\r\n  // Pseudocode biasa\r\n  const [pseudocode, setPseudocode] = useState([\r\n    { id: 0, text: \"Dari kotak ke 1 hingga kotak ke n\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"Cek nilai apakah sesuai dengan target?\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"Belum sesuai, cek kotak selanjutnya\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"Sudah sesuai, akhiri pencarian\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n\r\n  //>>>>>> state Pseudocode Anak IT\r\n  const [pseudocodeIT, setPseudocodeIT] = useState([\r\n    { id: 0, text: \"For i = 1 to array length\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"___ if array[i] = target\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"______  return true\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"return false\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n\r\n  // METHOD MERUBAH PSEUDOCODE\r\n  const highLightPseudocode = (arr, idx) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // Membuat pseudocode default terlebih dahulu\r\n\r\n        for (let i = 0; i < pseudocode.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n          arr[i].scale = 1;\r\n        }\r\n        // Membuat highlight\r\n        arr[idx].color = \"#5a9cff\";\r\n        arr[idx].colorText = \"white\";\r\n        arr[idx].scale = 1.4;\r\n        resolve();\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> method penentu highlight pseudocode\r\n  const highLightPseudocodeIT = (arr, idx1) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // * pseudocode default terlebih dahulu\r\n        for (let i = 0; i < arr.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n        }\r\n        // * Membuat highlight\r\n        arr[idx1].color = \"#5a9cff\";\r\n        arr[idx1].colorText = \"white\";\r\n        resolve();\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // METHOD UNTUK MEBERIKAN PENJELASAN\r\n  const ubahPenjelasan = (method, boxVal, target) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (method === \"CEK\") {\r\n          setDesk(\"CEK\");\r\n          setPenjelasan(\"Apakah kotak dengan nilai \" + boxVal + \" sama dengan target (\" + target + \")\");\r\n        } else if (method === \"NEXT\") {\r\n          setDesk(\"NEXT\");\r\n          setPenjelasan(\"Melanjut kan pencarian ke kotak depannya\");\r\n        } else if (method === \"KETEMU\") {\r\n          setDesk(\"KETEMU\");\r\n          setPenjelasan(\"Nilai target (\" + boxVal + \") ditemukan dalam array\");\r\n        } else {\r\n          setDesk(\"TIDAK KETEMU\");\r\n          setPenjelasan(\"Tidak ada kotak yang bernilai sesuai target \");\r\n        }\r\n        resolve();\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // TRANSISI PSEUDOCODE\r\n  const transitionPseudo = useTransition(pseudocode, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n  // >>>>>>>> pengaturan transisi pseudocode IT\r\n  const transitionPseudoIT = useTransition(pseudocodeIT, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // =============================================================================\r\n\r\n  // PENAMPUNG INPUT\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  //  PENGATURAN TRANSISI\r\n  const transition = useTransition(itemz, (item) => item.id, {\r\n    from: { transform: \"translateX(0px)\", opacity: 0 },\r\n    enter: (item) => [{ transform: \"translateX(\" + itemz.indexOf(item) * 60 + \"px)\", opacity: 1 }],\r\n    leave: { opacity: 0 },\r\n  });\r\n\r\n  // Method Merubah warna 1 kotak\r\n  const changeSatu = (arr, idx, color, scale) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        arr[idx].color = color;\r\n        arr[idx].scale = scale;\r\n        resolve();\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  // Method pengubah warna\r\n  const changeColor = (array, startIndex, endIndex, color, scale) => {\r\n    let i;\r\n    for (i = startIndex; i <= endIndex; i++) {\r\n      array[i].color = color;\r\n      array[i].scale = scale;\r\n    }\r\n  };\r\n\r\n  // MENGEMBALIKAN WARNA MENJADI DEFAULT\r\n  const resetArray = () => {\r\n    let newArray = [...itemz];\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n    changeColor(newArray, 0, newArray.length - 1, color.default, 1);\r\n    for (let i = 0; i < newPseudo.length; i++) {\r\n      newPseudo[i].color = color.default;\r\n      newPseudo[i].colorText = \"black\";\r\n      newPseudo[i].scale = 1;\r\n    }\r\n    for (let i = 0; i < newPseudoIT.length; i++) {\r\n      newPseudoIT[i].color = color.default;\r\n      newPseudoIT[i].colorText = \"black\";\r\n      newPseudoIT[i].scale = 1;\r\n    }\r\n    setDisable(false);\r\n    setDesk(\"\");\r\n    setPenjelasan(\"\");\r\n    setPseudocode(newPseudo);\r\n    setPseudocodeIT(newPseudoIT);\r\n    setItemz(newArray);\r\n    setInput(\"\");\r\n  };\r\n\r\n  // INPUT ARRAY\r\n  const split = () => {\r\n    setDisable(false);\r\n    setDisable2(false);\r\n    setInput(\"\");\r\n    let tempInput = input.split(\",\");\r\n    let newArray = [];\r\n    for (let i = 0; i < tempInput.length; i++) {\r\n      newArray.push({ id: i, val: parseInt(tempInput[i]), color: color.default, h: 50, scale: 1 });\r\n    }\r\n    console.log(newArray);\r\n    setItemz(newArray);\r\n  };\r\n\r\n  // METHOD SEQ SEARCH UNTUK CLASS RECTANGEL\r\n  const sequentialSearch = async () => {\r\n    if (input === \"\") {\r\n      alert(\"MASUKAN ANGKA YANG INGIN DICARI\");\r\n    } else {\r\n      setDisable(true);\r\n      setInput(\"\");\r\n      let newPseudo = pseudocode;\r\n      let newPseudocodeIT = pseudocodeIT;\r\n\r\n      // Ubah highlight pseudocode\r\n      await highLightPseudocode(newPseudo, 0);\r\n      setPseudocode(newPseudo);\r\n      // ============================\r\n      for (let i = 0; i < itemz.length; i++) {\r\n        let newArr = [...itemz];\r\n        // Ubah highlight pseudocode IT LOOP\r\n        await highLightPseudocodeIT(newPseudocodeIT, 0);\r\n        setPseudocodeIT(newPseudocodeIT);\r\n        // ============================\r\n\r\n        // ubah highlight pseudocode  CEK\r\n        await highLightPseudocode(newPseudo, 1);\r\n        await highLightPseudocodeIT(newPseudocodeIT, 1);\r\n        setPseudocodeIT(newPseudocodeIT);\r\n        await ubahPenjelasan(\"CEK\", newArr[i].val, input);\r\n        setPseudocode(newPseudo);\r\n        // ============================\r\n        if (newArr[i].val === parseInt(input)) {\r\n          // Ubah highlight pseudocode dan penjelasan  KETEMU\r\n          await highLightPseudocodeIT(newPseudocodeIT, 2);\r\n          setPseudocodeIT(newPseudocodeIT);\r\n          await highLightPseudocode(newPseudo, 3);\r\n          setPseudocode(newPseudo);\r\n          await ubahPenjelasan(\"KETEMU\", newArr[i].val, \"\");\r\n          // ============================\r\n\r\n          // ubah warna\r\n          await changeSatu(newArr, i, color.itIs, 1.2);\r\n          return setItemz(newArr);\r\n          // ==============\r\n        } else {\r\n          // Ubah highlight pseudocode NEXT\r\n          await highLightPseudocode(newPseudo, 2);\r\n          setPseudocode(newPseudo);\r\n          await ubahPenjelasan(\"NEXT\", \"\", \"\");\r\n          // ============================\r\n\r\n          // Ubah highlight pseudocode IT LOOP\r\n          await highLightPseudocodeIT(newPseudocodeIT, 0);\r\n          setPseudocodeIT(newPseudocodeIT);\r\n          // ============================\r\n\r\n          // ubah warna\r\n          await changeSatu(newArr, i, color.identify, 1);\r\n          setItemz(newArr);\r\n          // ==============\r\n        }\r\n      }\r\n      return ubahPenjelasan(\"\", \"\", \"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimation\" lg=\"9\">\r\n            <div className=\"mainAnimationArea\">\r\n              {transition.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n          {/* =========================================================== */}\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                {/* Tombol Toggle */}\r\n\r\n                <Button onClick={() => setPro(!pro)} variant={pro ? \"dark\" : \"light\"} size=\"sm\">\r\n                  {pro ? \"Pro\" : \"Awam\"}\r\n                </Button>\r\n\r\n                {/* Tampilan Pseudocode */}\r\n                <div className=\"wrapper\">\r\n                  {pro\r\n                    ? // Pseudocode untuk orang IT\r\n                      transitionPseudoIT.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocodeIT\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))\r\n                    : // Pseudocode untuk orang awam\r\n\r\n                      transitionPseudo.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocode\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {/* =========================================================== */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={disable} onClick={sequentialSearch} variant={itemz.length === 0 ? \"outline-secondary\" : \"dark\"}>\r\n                      Cari\r\n                    </Button>\r\n                    <Button disabled={disable2} onClick={resetArray} variant=\"outline-secondary\">\r\n                      Reset\r\n                    </Button>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={split} variant={itemz.length === 0 ? \"dark\" : \"outline-secondary\"}>\r\n                      Input\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(173, 173, 173)\" h={30} scale={1} />\r\n                <p> Kotak yang tidak di cek</p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(255, 192, 55)\" h={30} scale={1} />\r\n                <p> Kotak yang sudah di cek</p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#3FB1B5\" h={30} scale={1} />\r\n                <p> Kotak dengan nilai yang dicari</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeori\">\r\n              <h1>Sequential Search</h1>\r\n              <p>\r\n                Sequential Search, juga disebut pencarian linier, adalah yang paling sederhana dari semua algoritma pencarian. Ini adalah pendekatan brute force untuk menemukan nilai target tunggal, dalam sebuah koleksi nilai. Ia menemukan\r\n                targe dengan memulai pencarian pada elemen pertama dari koleksi dan memeriksa setiap elemen berikutnya sampai elemen yang cocok ditemukan atau setiap elemen dari koleksinya telah diperiksa\r\n              </p>\r\n              <div>\r\n                <h5>Kompleksitas</h5>\r\n                <p>\r\n                  Best Case : O(1)\r\n                  <br /> Average Case : O(n) <br /> Worst Case : O(n)\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi Searching lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/BinarySearch\">Binary Search</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport Rectangel from \"../Reuseable/Rectangel\";\r\nimport \"../style.css\";\r\n\r\nexport default function InsertionSort() {\r\n  // Sebuah object yang menyimpan warna\r\n  const color = { default: \"rgb(173, 173, 173)\", identify: \"rgb(255, 192, 55)\", itIs: \"#5A9CFF\", iteration: \"#FF5247\" };\r\n  // STATE UNTUK RECTANGEL CLASS\r\n  const [itemz, setItemz] = useState([]);\r\n  // Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n  // PENAMPUNG INPUT\r\n  const [input, setInput] = useState(\"\");\r\n  // DISABLE BUTTON\r\n  const [disable, setDisable] = useState(true);\r\n  const [disable2, setDisable2] = useState(true);\r\n  // PRO BUTTON\r\n  const [pro, setPro] = useState(true);\r\n  // =======================================\r\n  // PENAMPUNG PSEUDOCODE DAN PENJELASAN\r\n  // =======================================\r\n  // >>>>>> state Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n  // >>>>>> state Pseudocode awam\r\n  const [pseudocode, setPseudocode] = useState([\r\n    { id: 0, text: \"Masukan item ke i hingga ke n kedalam array yang sudah terurut di sebelah kiri item\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"Apakah nilai item sebelah lebih besar ?\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"Lebih besar, maka tukar posisi\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"Lebih kecil, maka array sebelah kiri sudah tersusun dan item sudah dimasukan\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n\r\n  // >>>>>> state Pseudocode Anak IT\r\n  const [pseudocodeIT, setPseudocodeIT] = useState([\r\n    { id: 0, text: \"For i = 2 to n\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"___ j = i - 1\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"___ key = A[i]\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"___ While j > 0 and key < array[j]\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 4, text: \"______  array[j+1]=array[j]\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 5, text: \"______  j = j-1\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 6, text: \"___ A[j+1] = key\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n\r\n  // >>>>>>> Method untuk mengubah penjelasan\r\n  const ubahPenjelasan = (method, box1, box2) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (method === \"CEK\") {\r\n          setDesk(\"CEK\");\r\n          setPenjelasan(\"Apakah nilai yang akan dimasukan (\" + box1 + \") lebih kecil dari \" + box2);\r\n        } else if (method === \"TUKAR\") {\r\n          setDesk(\"TUKAR POSISI\");\r\n          setPenjelasan(\"Karena nilai yang akan dimasukan (\" + box1 + \")  lebih kecil dibandingkan nilai sebelah kiri (\" + box2 + \"), maka posisinya ditukar\");\r\n        } else if (method === \"SKIP\") {\r\n          setDesk(\"Posisi Tepat\");\r\n          setPenjelasan(\"Karena nilai disebelah kiri lebih kecil, maka nilai yang dimasukan telah berada di posisi yang tepat\");\r\n        } else {\r\n          setDesk(\"TERURUT\");\r\n          setPenjelasan(\"Yeay! Semua nilai sudah terurut \");\r\n        }\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> method penentu highlight pseudocode\r\n  const highLightPseudocode = (arr, idx) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // * pseudocode default terlebih dahulu\r\n        for (let i = 0; i < arr.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n          arr[i].scale = 1;\r\n        }\r\n        // * Membuat highlight\r\n        arr[idx].color = \"#5a9cff\";\r\n        arr[idx].colorText = \"white\";\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> method penentu highlight pseudocode\r\n  const highLightPseudocodeIT = (arr, code) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // * pseudocode default terlebih dahulu\r\n        for (let i = 0; i < arr.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n        }\r\n        if (code === 0) {\r\n          // ubah baris 1-3\r\n          arr[0].color = \"#5a9cff\";\r\n          arr[0].colorText = \"white\";\r\n\r\n          arr[1].color = \"#5a9cff\";\r\n          arr[1].colorText = \"white\";\r\n\r\n          arr[2].color = \"#5a9cff\";\r\n          arr[2].colorText = \"white\";\r\n        } else if (code === 1) {\r\n          arr[3].color = \"#5a9cff\";\r\n          arr[3].colorText = \"white\";\r\n\r\n          arr[4].color = \"#5a9cff\";\r\n          arr[4].colorText = \"white\";\r\n\r\n          arr[5].color = \"#5a9cff\";\r\n          arr[5].colorText = \"white\";\r\n        } else {\r\n          arr[6].color = \"#5a9cff\";\r\n          arr[6].colorText = \"white\";\r\n        }\r\n\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>>> pengaturan transisi pseudocode\r\n  const transitionPseudo = useTransition(pseudocode, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // >>>>>>>> pengaturan transisi pseudocode IT\r\n  const transitionPseudoIT = useTransition(pseudocodeIT, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // ================================================\r\n\r\n  // TRANSISI KOTAK\r\n  const transition = useTransition(itemz, (item) => item.id, {\r\n    from: { transform: \"translate3d(0px,0px,0)\", opacity: 1 },\r\n    enter: (item) => [{ transform: \"translate3d(\" + itemz.indexOf(item) * 60 + \"px,0%,0)\", opacity: 1 }],\r\n    update: (item) => [{ transform: \"translate3d(\" + itemz.indexOf(item) * 60 + \"px,0%,0)\" }],\r\n    leave: { opacity: 0 },\r\n    config: { tension: 400, mass: 2 },\r\n  });\r\n\r\n  // METHOD UNTUK HANDLE INPUT\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  // INPUT ARRAY\r\n  const split = () => {\r\n    let tempInput = input.split(\",\");\r\n    setInput(\"\");\r\n    if (isNaN(tempInput[0])) {\r\n      alert(\"MASUKAN HARUS BERUPA ANGKA! CONTOH : 20,33,29,56\");\r\n    } else {\r\n      setDisable(false);\r\n      setDisable2(false);\r\n      setItemz([]);\r\n      let newArray = [];\r\n      for (let i = 0; i < tempInput.length; i++) {\r\n        newArray.push({ id: i, val: parseInt(tempInput[i]), color: color.default, h: parseInt(tempInput[i]), scale: 1 });\r\n      }\r\n      console.log(newArray);\r\n      setItemz([...newArray]);\r\n    }\r\n  };\r\n\r\n  // ===== EMPTY AN ARRAY =====\r\n  const emptyArray = () => {\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n    // * Mereset pseudocode dan penjelasan\r\n    for (let i = 0; i < newPseudo.length; i++) {\r\n      newPseudo[i].color = color.default;\r\n      newPseudo[i].colorText = \"black\";\r\n      newPseudo[i].scale = 1;\r\n    }\r\n    for (let i = 0; i < newPseudoIT.length; i++) {\r\n      newPseudoIT[i].color = color.default;\r\n      newPseudoIT[i].colorText = \"black\";\r\n      newPseudoIT[i].scale = 1;\r\n    }\r\n    setDisable(true);\r\n    setDisable2(true);\r\n    setPseudocodeIT(newPseudoIT);\r\n    setDesk(\"\");\r\n    setPenjelasan(\"\");\r\n    setPseudocode([...newPseudo]);\r\n    // * Mereset array\r\n    let newArr = itemz;\r\n    while (newArr.length) {\r\n      newArr.pop();\r\n    }\r\n    setItemz([...newArr]);\r\n  };\r\n\r\n  // ===== METHOD UNTUK MERUBAH WARNA KOTAK =====\r\n  const changeColor = (arr, idx, color) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        arr[idx].color = color;\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  const sorted = (arr) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        for (let i = 0; i < arr.length; i++) {\r\n          arr[i].color = color.itIs;\r\n        }\r\n        resolve();\r\n      }, 500);\r\n    });\r\n  };\r\n  // ============================================\r\n\r\n  // ===== FUNCTION SWAPPING =====\r\n  const swapping = (array, e1, e2) => {\r\n    return ([array[e1], array[e2]] = [array[e2], array[e1]]);\r\n  };\r\n\r\n  // ======== INSERTION SORT ========\r\n\r\n  const insertionSort = async () => {\r\n    setDisable(true);\r\n    let newArray = itemz;\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n    // Ubah Penjelasan dan Pseudocode\r\n    await highLightPseudocode(newPseudo, 0);\r\n    setPseudocode(newPseudo);\r\n    // ==============================\r\n    for (let i = 1; i < itemz.length; i++) {\r\n      let j = i;\r\n      // Ubah Penjelasan dan Pseudocode\r\n      await highLightPseudocodeIT(newPseudoIT, 0);\r\n      await highLightPseudocode(newPseudo, 1);\r\n      setPseudocode(newPseudo);\r\n      setPseudocodeIT(newPseudoIT);\r\n      // ===============================\r\n\r\n      // Ubah Warna untuk array[j] dan array[j-1]\r\n      await changeColor(newArray, j, color.iteration);\r\n      await changeColor(newArray, j - 1, color.identify);\r\n      setItemz([...newArray]);\r\n      // ==========================\r\n\r\n      while (j - 1 >= 0 && newArray[j].h < newArray[j - 1].h) {\r\n        // Ubah Penjelasan dan Pseudocode\r\n        await highLightPseudocodeIT(newPseudoIT, 1);\r\n        await highLightPseudocode(newPseudo, 2);\r\n        setPseudocode(newPseudo);\r\n        setPseudocodeIT(newPseudoIT);\r\n        await ubahPenjelasan(\"CEK\", newArray[j].h, newArray[j - 1].h);\r\n        // ===================================\r\n\r\n        // Ubah warna iterasi array[j-1]\r\n        await changeColor(newArray, j - 1, color.identify);\r\n        setItemz([...newArray]);\r\n        // =============================\r\n\r\n        // Ubah Penjelasan\r\n\r\n        await ubahPenjelasan(\"TUKAR\", newArray[j].h, newArray[j - 1].h);\r\n        // =============================\r\n        await new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            swapping(newArray, j, j - 1);\r\n            setItemz([...newArray]);\r\n            resolve();\r\n          }, 2000);\r\n        });\r\n\r\n        // Ubah warna array[j] ke semula\r\n        await changeColor(newArray, j, color.default);\r\n        setItemz([...newArray]);\r\n        // ==============================\r\n\r\n        j--;\r\n      }\r\n\r\n      // Ubah Penjelasan dan Pseudocode\r\n\r\n      await ubahPenjelasan(\"SKIP\", \"\", \"\");\r\n      await highLightPseudocodeIT(newPseudoIT, 2);\r\n      setPseudocodeIT(newPseudoIT);\r\n      await highLightPseudocode(newPseudo, 3);\r\n      setPseudocode(newPseudo);\r\n      // ==============================\r\n\r\n      // Ubah warna ke semula\r\n      if (j - 1 >= 0) {\r\n        await changeColor(newArray, j - 1, color.default);\r\n      }\r\n      await changeColor(newArray, j, color.default);\r\n      setItemz([...newArray]);\r\n      // ==============================\r\n    }\r\n\r\n    // Ubah Penjelasan\r\n    await ubahPenjelasan(\"\", \"\", \"\");\r\n    // ==========================\r\n\r\n    // Ubah semua warna array karna sudah ter sort\r\n    await sorted(newArray);\r\n    setItemz([...newArray]);\r\n    // ============================================\r\n  };\r\n\r\n  // ================================\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimation\" lg=\"9\">\r\n            {/* ANIMASI */}\r\n            <div className=\"mainAnimationArea\">\r\n              {transition.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n\r\n          {/* =========================================================== */}\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                {/* Tombol Toggle */}\r\n\r\n                <Button onClick={() => setPro(!pro)} variant={pro ? \"dark\" : \"light\"} size=\"sm\">\r\n                  {pro ? \"Pro\" : \"Awam\"}\r\n                </Button>\r\n\r\n                {/* Tampilan Pseudocode */}\r\n                <div className=\"wrapper\">\r\n                  {pro\r\n                    ? // Pseudocode untuk orang IT\r\n                      transitionPseudoIT.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocodeIT\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))\r\n                    : // Pseudocode untuk orang awam\r\n                      transitionPseudo.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocode\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {/* =========================================================== */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={disable} onClick={insertionSort} variant={itemz.length === 0 ? \"outline-secondary\" : \"dark\"}>\r\n                      Sort\r\n                    </Button>\r\n                    <Button disabled={disable2} onClick={emptyArray} variant=\"outline-secondary\">\r\n                      Reset\r\n                    </Button>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={split} variant={itemz.length === 0 ? \"dark\" : \"outline-secondary\"}>\r\n                      Input\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row></Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(173, 173, 173)\" h={30} scale={1} />\r\n                <p> Belum Terurut </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(255, 192, 55)\" h={30} scale={1} />\r\n                <p> Nilai Pembanding </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#FF5247\" h={30} scale={1} />\r\n                <p> Nilai yang dimasukan </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#3FB1B5\" h={30} scale={1} />\r\n                <p> Terurut</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeoriPendek\">\r\n              <h1>Insertion Sort</h1>\r\n              <p>\r\n                Insertion sort adalah algoritme yang paling efesien untuk mengurutkan bilangan yang jumlahnya sedikit. Algortime ini berjalan seperti kebanyakan orang mengurutkan kartu pada tangannya. di awali dengan tangan kiri yang kosong\r\n                dan kartu di meja menghadap ke bawah. lalu setelah itu kartu diambil dan diletakan pada tangan kiri dengan posisi kartu menghadap ke atas. untuk untuk menemukan posisi yang benar pada suatu kartu, pemain mulai membandingkan\r\n                kartu dengan masing masing kartu yang sudah ada di tangan, dari kanan ke kiri.\r\n              </p>\r\n              <div>\r\n                <h5>Kompleksitas</h5>\r\n                <p>\r\n                  Best Case : O(n)\r\n                  <br /> Average Case : O(n^2) <br /> Worst Case : O(n^2)\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi Sorting lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/QuickSort\">Quick Sort</Button>\r\n            <Button href=\"#/MergeSort\">Merge Sort</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport Rectangel from \"../Reuseable/Rectangel\";\r\nimport \"../style.css\";\r\n\r\nexport default function QuickSort() {\r\n  // Sebuah object yang menyimpan warna\r\n  const color = { default: \"rgb(173, 173, 173)\", identify: \"rgb(255, 192, 55)\", itIs: \"#5A9CFF\", iteration: \"#FF5247\" };\r\n  // STATE UNTUK RECTANGEL CLASS\r\n  const [items, setItems] = useState([]);\r\n  // DISABLE BUTTON\r\n  const [disable, setDisable] = useState(true);\r\n  const [disable2, setDisable2] = useState(true);\r\n  // PRO BUTTON\r\n  const [pro, setPro] = useState(true);\r\n\r\n  // =================\r\n  // PENAMPUNG INPUT\r\n  // ================\r\n  // >>>>>> State penampung input\r\n  const [input, setInput] = useState(\"\");\r\n  // >>>>>> Method untuk handling input\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  // >>>>>> Method untuk memecah dan memasukan input kedalam array\r\n  const split = () => {\r\n    let tempInput = input.split(\",\");\r\n    setInput(\"\");\r\n    if (isNaN(tempInput[0])) {\r\n      alert(\"MASUKAN HARUS BERUPA ANGKA! CONTOH : 20,33,29,56\");\r\n    } else {\r\n      setDisable(false);\r\n      setDisable2(false);\r\n      setItems([]);\r\n      let newArray = [];\r\n      for (let i = 0; i < tempInput.length; i++) {\r\n        newArray.push({ id: i, val: parseInt(tempInput[i]), color: color.default, h: parseInt(tempInput[i]), scale: 1 });\r\n      }\r\n      setItems([...newArray]);\r\n    }\r\n  };\r\n  // ============================================\r\n\r\n  // =======================================\r\n  // PENAMPUNG PSEUDOCODE DAN PENJELASAN\r\n  // =======================================\r\n  // >>>>>> Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n\r\n  // >>>>>> state Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n\r\n  // >>>>>> state Pseudocode\r\n  const [pseudocode, setPseudocode] = useState([\r\n    { id: 0, text: \"Menentukan posisi yang tepat untuk setiap nilai\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"Menentukan nilai yang mau diurutkan atau pivot\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"Bandingkan nilai pivot dengan nilai iterasi, apakah nilai iterasi lebih kecil?\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"Lebih kecil, iterasi dan penanda tempat pivot berpindah ke posisi depannya \", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 4, text: \"Tukar posisi pivot dengan penanda posisi pivot \", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n\r\n  // >>>>>> state Pseudocode Anak IT\r\n  const [pseudocodeIT, setPseudocodeIT] = useState([\r\n    { id: 0, text: \"For each unsorted partition\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"pivot = A[endIndex]\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"i = startIndex - 1\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"___ for j = startIndex to endIndex - 1\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 4, text: \"______ if A[j] < pivot \", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 5, text: \"_________ exchange A[i] with A[j])\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 6, text: \"_________ storeIndex++\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 7, text: \"___ exchange A[i+1] with A[End])\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 8, text: \"return i + 1\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n\r\n  // >>>>>>> Method untuk mengubah penjelasan\r\n  const ubahPenjelasan = (method, val1, val2) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (method === \"Tentukan\") {\r\n          setDesk(\"Tentukan Nilai Pivot\");\r\n          setPenjelasan(\"Menentukan nilai pivot, nilai yang akan di jadikan pivot adalah nilai paling akhir dalam array (\" + val1 + \")\");\r\n        } else if (method === \"CEK\") {\r\n          setDesk(\"Cek Nilai Iterasi\");\r\n          setPenjelasan(\"Memandingkan nilai kotak kuning (\" + val1 + \") dengan nilai pivot \" + val2 + \" (kotak merah)\");\r\n        } else if (method === \"TUKAR\") {\r\n          setDesk(\"Tukar\");\r\n          setPenjelasan(\"Tukar posisi pivot (\" + val1 + \") dengan penanda pivot \" + val2 + \" (kotak hijau)\");\r\n        } else if (method === \"KECIL\") {\r\n          setDesk(\"Lebih Kecil\");\r\n          setPenjelasan(\"Karena nilai (\" + val1 + \") (kotak kuning) lebih kecil dibandingkan nilai pivot (\" + val2 + \"), maka penanda tempat pivot dipindahkan kedepannya\");\r\n        } else {\r\n          setDesk(\"TERURUT\");\r\n          setPenjelasan(\"Yeay! Semua nilai sudah terurut \");\r\n        }\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> method penentu highlight pseudocode\r\n  const highLightPseudocode = (arr, idx) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // * pseudocode default terlebih dahulu\r\n        for (let i = 0; i < pseudocode.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n          arr[i].scale = 1;\r\n        }\r\n        // * Membuat highlight\r\n        arr[idx].color = \"#5a9cff\";\r\n        arr[idx].colorText = \"white\";\r\n        arr[idx].scale = 1.4;\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> method penentu highlight pseudocode\r\n  const highLightPseudocodeIT = (arr, code) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // * pseudocode default terlebih dahulu\r\n        for (let i = 0; i < pseudocodeIT.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n        }\r\n        // * Membuat highlight\r\n        if (code === 0) {\r\n          arr[0].color = \"#5a9cff\";\r\n          arr[0].colorText = \"white\";\r\n\r\n          arr[1].color = \"#5a9cff\";\r\n          arr[1].colorText = \"white\";\r\n\r\n          arr[2].color = \"#5a9cff\";\r\n          arr[2].colorText = \"white\";\r\n        } else if (code === 1) {\r\n          arr[3].color = \"#5a9cff\";\r\n          arr[3].colorText = \"white\";\r\n\r\n          arr[4].color = \"#5a9cff\";\r\n          arr[4].colorText = \"white\";\r\n        } else if (code === 2) {\r\n          arr[5].color = \"#5a9cff\";\r\n          arr[5].colorText = \"white\";\r\n\r\n          arr[6].color = \"#5a9cff\";\r\n          arr[6].colorText = \"white\";\r\n        } else if (code === 3) {\r\n          arr[7].color = \"#5a9cff\";\r\n          arr[7].colorText = \"white\";\r\n        } else {\r\n          arr[8].color = \"#5a9cff\";\r\n          arr[8].colorText = \"white\";\r\n        }\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>>> pengaturan transisi pseudocode\r\n  const transitionPseudo = useTransition(pseudocode, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // >>>>>>>> pengaturan transisi pseudocode IT\r\n  const transitionPseudoIT = useTransition(pseudocodeIT, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // ================================================\r\n\r\n  // TRANSISI KOTAK\r\n  const transition = useTransition(items, (item) => item.id, {\r\n    from: { transform: \"translate3d(0px,0px,0)\", opacity: 1 },\r\n    enter: (item) => [{ transform: \"translate3d(\" + items.indexOf(item) * 60 + \"px,0%,0)\", opacity: 1 }],\r\n    update: (item) => [{ transform: \"translate3d(\" + items.indexOf(item) * 60 + \"px,0%,0)\" }],\r\n    leave: { opacity: 0 },\r\n    config: { tension: 400, mass: 2 },\r\n  });\r\n\r\n  // ===== Method untuk Mereset array dan penjelasan =====\r\n  const emptyArray = () => {\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n    // * Mereset pseudocode dan penjelasan\r\n    for (let i = 0; i < newPseudo.length; i++) {\r\n      newPseudo[i].color = color.default;\r\n      newPseudo[i].colorText = \"black\";\r\n      newPseudo[i].scale = 1;\r\n    }\r\n    for (let i = 0; i < newPseudoIT.length; i++) {\r\n      newPseudoIT[i].color = color.default;\r\n      newPseudoIT[i].colorText = \"black\";\r\n      newPseudoIT[i].scale = 1;\r\n    }\r\n    setDisable(true);\r\n    setDisable2(true);\r\n    setDesk(\"\");\r\n    setPenjelasan(\"\");\r\n    setPseudocode([...newPseudo]);\r\n    setPseudocodeIT([...newPseudoIT]);\r\n    // * Mereset array\r\n    let newArr = items;\r\n    while (newArr.length) {\r\n      newArr.pop();\r\n    }\r\n    setItems([...newArr]);\r\n  };\r\n\r\n  // ============================================\r\n  // ===== METHOD UNTUK MERUBAH WARNA KOTAK =====\r\n  // ============================================\r\n  // >>>>>>>> Merubah warna satu kotak\r\n  const changeColor = (arr, idx, color) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        arr[idx].color = color;\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n  };\r\n  // >>>>>> Merubah Warna jika semua sudah terurut\r\n  const sorted = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        let newArr = items;\r\n        for (let i = 0; i < newArr.length; i++) {\r\n          newArr[i].color = color.itIs;\r\n        }\r\n        setItems([...newArr]);\r\n        resolve();\r\n      }, 500);\r\n    });\r\n  };\r\n  // ============================================\r\n\r\n  // ===== FUNCTION SWAPPING =====\r\n\r\n  const swapping = (array, e1, e2) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        [array[e1], array[e2]] = [array[e2], array[e1]];\r\n        resolve();\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  //   ===== PARTITION =====\r\n\r\n  const partition = async (start, end) => {\r\n    // Taking the last element as the pivot\r\n    let newArr = items;\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n\r\n    // ubah Pseudo dan penjelasan 1\r\n    await highLightPseudocode(newPseudo, 1);\r\n    await highLightPseudocodeIT(newPseudoIT, 0);\r\n    setPseudocode(newPseudo);\r\n    setPseudocodeIT(newPseudoIT);\r\n\r\n    await ubahPenjelasan(\"Tentukan\", newArr[end].val, \"\");\r\n    // ========================\r\n\r\n    const pivotValue = newArr[end];\r\n    await changeColor(newArr, end, color.iteration);\r\n    setItems([...newArr]);\r\n    let pivotIndex = start;\r\n    for (let i = start; i < end; i++) {\r\n      // ubah Pseudo dan penjelasan (CHECK)\r\n      await highLightPseudocode(newPseudo, 2);\r\n      await highLightPseudocodeIT(newPseudoIT, 1);\r\n      setPseudocode(newPseudo);\r\n      setPseudocodeIT(newPseudoIT);\r\n      await ubahPenjelasan(\"CEK\", newArr[i].val, pivotValue.val);\r\n      // ========================\r\n\r\n      await changeColor(newArr, pivotIndex, \"#43C395\");\r\n      setItems([...newArr]);\r\n      await changeColor(newArr, i, color.identify);\r\n      setItems([...newArr]);\r\n      if (newArr[i].val < pivotValue.val) {\r\n        // ubah Pseudo dan penjelasan KECIL\r\n        await highLightPseudocode(newPseudo, 3);\r\n        await highLightPseudocodeIT(newPseudoIT, 2);\r\n        setPseudocode(newPseudo);\r\n        setPseudocodeIT(newPseudoIT);\r\n        await ubahPenjelasan(\"KECIL\", newArr[i].val, pivotValue.val);\r\n        // ========================\r\n\r\n        // Swapping elements\r\n        await swapping(newArr, i, pivotIndex);\r\n        setItems([...newArr]);\r\n        await changeColor(newArr, pivotIndex, color.default);\r\n\r\n        // Moving to next element\r\n        pivotIndex++;\r\n      }\r\n      await changeColor(newArr, i, color.default);\r\n      setItems([...newArr]);\r\n    }\r\n    // ubah Pseudo dan penjelasan TUKAR\r\n    await highLightPseudocode(newPseudo, 4);\r\n    await highLightPseudocodeIT(newPseudoIT, 3);\r\n    setPseudocode(newPseudo);\r\n    setPseudocodeIT(newPseudoIT);\r\n    await ubahPenjelasan(\"TUKAR\", pivotValue.val, newArr[pivotIndex].val);\r\n    // ========================\r\n    // Putting the pivot value in the middle\r\n    await swapping(newArr, pivotIndex, end);\r\n    await changeColor(newArr, end, color.default);\r\n    await changeColor(newArr, pivotIndex, color.itIs);\r\n    setItems([...newArr]);\r\n    setItems([...newArr]);\r\n\r\n    // Reset Pseudo IT\r\n    await highLightPseudocodeIT(newPseudoIT, 4);\r\n    setPseudocodeIT([...newPseudoIT]);\r\n    // ====================\r\n    return pivotIndex;\r\n  };\r\n  // ================================\r\n  // ============= QUICK SORT =============\r\n  const quickSortIterative = async () => {\r\n    setDisable(true);\r\n    //Membuat Array untuk penampung daerah menggunakan push() dan pop() functions\r\n    let stack = [];\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n    await highLightPseudocode(newPseudo, 0);\r\n    setPseudocode([...newPseudo]);\r\n    // inisialisasi daerah pivot\r\n    stack.push(0);\r\n    stack.push(items.length - 1);\r\n\r\n    // Looping hingga array terurut\r\n    while (stack[stack.length - 1] >= 0) {\r\n      // mengekstrak subarray\r\n      let end = stack.pop();\r\n      let start = stack.pop();\r\n\r\n      // Ubah Pseudocode IT\r\n      await highLightPseudocodeIT(newPseudoIT, 0, null);\r\n      setPseudocodeIT([...newPseudoIT]);\r\n      // =====================\r\n\r\n      let pivotIndex = await partition(start, end);\r\n\r\n      // Membuat subarray sebelah kiri pivot\r\n      if (pivotIndex - 1 > start) {\r\n        stack.push(start);\r\n        stack.push(pivotIndex - 1);\r\n      }\r\n\r\n      // Membuat subarray sebelah kanan pivot\r\n      if (pivotIndex + 1 < end) {\r\n        stack.push(pivotIndex + 1);\r\n        stack.push(end);\r\n      }\r\n    }\r\n    // ubah  penjelasan SELESAI\r\n    await ubahPenjelasan(\"\", \"\", \"\");\r\n    // ========================\r\n\r\n    await sorted();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimation\" lg=\"9\">\r\n            <div className=\"mainAnimationArea\">\r\n              {transition.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n          {/* =========================================================== */}\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                {/* Tombol Toggle */}\r\n\r\n                <Button onClick={() => setPro(!pro)} variant={pro ? \"dark\" : \"light\"} size=\"sm\">\r\n                  {pro ? \"Pro\" : \"Awam\"}\r\n                </Button>\r\n\r\n                {/* Tampilan Pseudocode */}\r\n                <div className=\"wrapper\">\r\n                  {pro\r\n                    ? // Pseudocode untuk orang IT\r\n                      transitionPseudoIT.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocodeIT\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))\r\n                    : // Pseudocode untuk orang awam\r\n\r\n                      transitionPseudo.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocode\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {/* =========================================================== */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={disable} onClick={quickSortIterative} variant={items.length === 0 ? \"outline-secondary\" : \"dark\"}>\r\n                      Sort\r\n                    </Button>\r\n                    <Button disabled={disable2} onClick={emptyArray} variant=\"outline-secondary\">\r\n                      Reset\r\n                    </Button>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={split} variant={items.length === 0 ? \"dark\" : \"outline-secondary\"}>\r\n                      Input\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(173, 173, 173)\" h={30} scale={1} />\r\n                <p> Belum Terurut </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(255, 192, 55)\" h={30} scale={1} />\r\n                <p> Nilai Pembanding </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#FF5247\" h={30} scale={1} />\r\n                <p> Pivot </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#3FB1B5\" h={30} scale={1} />\r\n                <p> Terurut</p>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#43C395\" h={30} scale={1} />\r\n                <p> Penanda Pivot </p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeoriPendek\">\r\n              <h1>Quick Sort</h1>\r\n              <p>\r\n                Dalam quick sort kita akan memilih elemen untuk dipartisi array menjadi subarray. elemen yang dipilih disebut pivot. Quicksort memiliki 2 langkah, Array dipartisi di sekitar nilai pivot, membuat subarray kiri yang berisi\r\n                elemen kurang dari atau sama dengan pivot, dan subarray kanan yang berisi elemen lebih besar dari atau sama dengan pivot. Masing-masing subarray ini kemudian diurutkan secara rekursif. Pseudocode yang tercantum pada halaman\r\n                ini adalah pseudocode lomuto partition yang memiliki 3 parameter, yaitu Array, index awal, dan index akhir.\r\n              </p>\r\n              <div>\r\n                <h5>Kompleksitas</h5>\r\n                <p>\r\n                  Best Case : O(log n)\r\n                  <br /> Average Case : O(n log n) <br /> Worst Case : O(n^2)\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi Sorting lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/InsertionSort\">Insertion Sort</Button>\r\n            <Button href=\"#/MergeSort\">Merge Sort</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport Rectangel from \"../Reuseable/Rectangel\";\r\nimport \"../style.css\";\r\n\r\nexport default function MergeSort() {\r\n  // PENAMPUNG WARNA\r\n  const color = { default: \"rgb(173, 173, 173)\", identify: \"rgb(255, 192, 55)\", itIs: \"#5A9CFF\", iteration: \"#FF5247\", ColorArray: [\"#5A9CFF\", \"#FF5247\", \"#9A3B82\", \"#E57281\", \"3FB1B5\", \"#FFCF2D\"] };\r\n  // STATE UNTUK MENAMPUNG ARRAY KOTAK\r\n  const [items, setItems] = useState([]);\r\n  // DISABLE BUTTON\r\n  const [disable, setDisable] = useState(true);\r\n  const [disable2, setDisable2] = useState(true);\r\n  // PRO BUTTON\r\n  const [pro, setPro] = useState(true);\r\n  // STATE UNTUK AUXILARY ARRAY (MERGE SORT)\r\n  const [auxItems, setAux] = useState([]);\r\n  // STATE UNTUK MENANDAI ITERASI DI AUXILARY ARRAY UNTUK PENGATURAN TRANSISI KOTAK DI AUXILARY ARRAY\r\n  const [iteratorAuxAnim, setIteratorAux] = useState(0);\r\n  // PENAMPUNG INPUT\r\n  const [input, setInput] = useState(\"\");\r\n  // METHOD UNTUK HANDLE INPUT\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  // INPUT ARRAY\r\n  const split = () => {\r\n    let tempInput = input.split(\",\");\r\n    setInput(\"\");\r\n    if (isNaN(tempInput[0])) {\r\n      alert(\"MASUKAN HARUS BERUPA ANGKA! CONTOH : 20,33,29,56\");\r\n    } else {\r\n      setDisable(false);\r\n      setDisable2(false);\r\n      setItems([]);\r\n      let newArray = [];\r\n      for (let i = 0; i < tempInput.length; i++) {\r\n        newArray.push({ id: i, val: parseInt(tempInput[i]), color: color.default, h: parseInt(tempInput[i]), scale: 1 });\r\n      }\r\n      setItems([...newArray]);\r\n    }\r\n  };\r\n  // ==========================\r\n\r\n  // =======================================\r\n  // PENAMPUNG PSEUDOCODE DAN PENJELASAN\r\n  // =======================================\r\n  // >>>>>> Penampung Deskripsi\r\n  const [desk, setDesk] = useState(\"\");\r\n\r\n  // >>>>>> state Penjelasan\r\n  const [penjelasan, setPenjelasan] = useState(\"\");\r\n\r\n  // >>>>>> state Pseudocode\r\n  const [pseudocode, setPseudocode] = useState([\r\n    { id: 0, text: \"Membandingkan elemen array sebelah kiri dan kanan\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"Elemen array sebelah kanan dimasukan ke array penampung\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"Elemen array sebelah Kiri dimasukan ke array penampung\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"Masukan sisa array sebelah kanan\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 4, text: \"Masukan sisa array sebelah kiri \", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 5, text: \"Salin array penampung kedalam array utama\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n  // >>>>>> state Pseudocode Anak IT\r\n  const [pseudocodeIT, setPseudocodeIT] = useState([\r\n    { id: 0, text: \"for size = 1 to size < array.length\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 1, text: \"_for leftStart = 0 to leftStart < array.length\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 2, text: \"__left = leftStart; right = left + size; i = left\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 3, text: \"___while left < leftLimit and right < rightLimit\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 4, text: \"____if array[left] <= array[right]\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 5, text: \"_____  aux[i] = array[left]; left++; i++;\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 6, text: \"_____ else : aux[i] = array[right]; right++; i++;\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 7, text: \"___ while left < leftLimit\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 8, text: \"____ aux[i] = array[left]; left++; i++\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 9, text: \"___ while right < rightLimit\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 10, text: \"____ aux[i] = array[right]; right++; i++\", color: color.default, colorText: \"black\", scale: 1 },\r\n    { id: 11, text: \"_ copy aux to original array;\", color: color.default, colorText: \"black\", scale: 1 },\r\n  ]);\r\n  // >>>>>>> Method untuk mengubah penjelasan\r\n  const ubahPenjelasan = (method, val1, val2) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (method === \"BANDINGKAN\") {\r\n          setDesk(\"Membandingkan Elemen\");\r\n          setPenjelasan(\"Membandingkan elemen array sebelah kiri (\" + val1 + \") dan kanan (\" + val2 + \")\");\r\n        } else if (method === \"KIRI1\") {\r\n          setDesk(\"Memasukan Elemen Array sebelah kiri\");\r\n          setPenjelasan(\"Karena nilai \" + val1 + \" lebih kecil dibandingkan \" + val2 + \", maka \" + val1 + \" dimasukan kedalam array penampung\");\r\n        } else if (method === \"KANAN1\") {\r\n          setDesk(\"Memasukan Elemen Array sebelah Kanan\");\r\n          setPenjelasan(\"Karena nilai \" + val1 + \" lebih besar dibandingkan \" + val2 + \", maka \" + val2 + \" dimasukan kedalam array penampung\");\r\n        } else if (method === \"KIRI2\") {\r\n          setDesk(\"Memasukan Sisa Elemen Kiri\");\r\n          setPenjelasan(\"Memasukan \" + val1 + \" pada array penampung\");\r\n        } else if (method === \"KANAN2\") {\r\n          setDesk(\"Memasukan Sisa Elemen Kanan\");\r\n          setPenjelasan(\"Memasukan \" + val2 + \" pada array penampung\");\r\n        } else if (method === \"SALIN\") {\r\n          setDesk(\"Menyalin Array\");\r\n          setPenjelasan(\"Menyalin array penapung kedalam array utama untuk melakukan perbandingan kembali\");\r\n        } else {\r\n          setDesk(\"TERURUT\");\r\n          setPenjelasan(\"Yeay! Semua nilai sudah terurut \");\r\n        }\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> method penentu highlight pseudocode\r\n  const highLightPseudocode = (arr, idx) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // * pseudocode default terlebih dahulu\r\n        for (let i = 0; i < pseudocode.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n          arr[i].scale = 1;\r\n        }\r\n        // * Membuat highlight\r\n        arr[idx].color = \"#5a9cff\";\r\n        arr[idx].colorText = \"white\";\r\n        arr[idx].scale = 1.4;\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>> method penentu highlight pseudocode\r\n  const highLightPseudocodeIT = (arr, idx1, idx2) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // * pseudocode default terlebih dahulu\r\n        for (let i = 0; i < arr.length; i++) {\r\n          arr[i].color = color.default;\r\n          arr[i].colorText = \"black\";\r\n        }\r\n        // * Membuat highlight\r\n        if (idx1 != null) {\r\n          arr[idx1].color = \"#5a9cff\";\r\n          arr[idx1].colorText = \"white\";\r\n        }\r\n        if (idx2 != null) {\r\n          arr[idx2].color = \"#5a9cff\";\r\n          arr[idx2].colorText = \"white\";\r\n        }\r\n        resolve();\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  // >>>>>>>> pengaturan transisi pseudocode\r\n  const transitionPseudo = useTransition(pseudocode, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // >>>>>>>> pengaturan transisi pseudocode IT\r\n  const transitionPseudoIT = useTransition(pseudocodeIT, (item) => item.id, {\r\n    from: { opacity: 1, background: \"white\", color: \"black\", scale: 0 },\r\n    enter: (item) => [{ opacity: 1, background: item.color, color: item.colorText, scale: item.scale }],\r\n    update: (item) => [{ background: item.color, color: item.colorText, scale: item.scale, opacity: 1 }],\r\n  });\r\n\r\n  // ================================================\r\n\r\n  // TRANSISI KOTAK\r\n  const transition = useTransition(items, (item) => item.id, {\r\n    from: { transform: \"translate3d(0px,0px,0)\", opacity: 1 },\r\n    enter: (item) => [{ transform: \"translate3d(\" + items.indexOf(item) * 60 + \"px,0%,0)\", opacity: 1 }],\r\n    update: (item) => [{ transform: \"translate3d(\" + items.indexOf(item) * 60 + \"px,0%,0)\" }],\r\n    leave: { opacity: 0 },\r\n    config: { tension: 400, mass: 2 },\r\n  });\r\n\r\n  const transitionAux = useTransition(auxItems, (item) => item.id, {\r\n    from: { transform: \"translate3d(\" + iteratorAuxAnim * 60 + \"px,-100px,0)\", opacity: 1 },\r\n    enter: (item) => [{ transform: \"translate3d(\" + auxItems.indexOf(item) * 60 + \"px,0%,0)\", opacity: 1 }],\r\n    update: (item) => [{ transform: \"translate3d(\" + auxItems.indexOf(item) * 60 + \"px,0%,0)\" }],\r\n    leave: { transform: \"translateY(100px)\", opacity: 0 },\r\n    config: { tension: 400, mass: 2 },\r\n  });\r\n\r\n  const resetAux = () => {\r\n    let newArr = auxItems;\r\n    while (newArr.length) {\r\n      newArr.pop();\r\n    }\r\n    setAux([...newArr]);\r\n  };\r\n\r\n  // ===== Method untuk Mereset array dan penjelasan =====\r\n  const emptyArray = () => {\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n    // * Mereset pseudocode dan penjelasan\r\n    for (let i = 0; i < newPseudo.length; i++) {\r\n      newPseudo[i].color = color.default;\r\n      newPseudo[i].colorText = \"black\";\r\n      newPseudo[i].scale = 1;\r\n    }\r\n    for (let i = 0; i < newPseudoIT.length; i++) {\r\n      newPseudoIT[i].color = color.default;\r\n      newPseudoIT[i].colorText = \"black\";\r\n      newPseudoIT[i].scale = 1;\r\n    }\r\n    setDisable(true);\r\n    setDisable2(true);\r\n    setDesk(\"\");\r\n    setPenjelasan(\"\");\r\n    setPseudocode([...newPseudo]);\r\n    setPseudocodeIT([...newPseudoIT]);\r\n    // * Mereset array\r\n    let newArr = items;\r\n    while (newArr.length) {\r\n      newArr.pop();\r\n    }\r\n    setItems([...newArr]);\r\n  };\r\n\r\n  // ===== METHOD UNTUK MERUBAH WARNA KOTAK =====\r\n  const changeColor = (arr, idx, color) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        arr[idx].color = color;\r\n        resolve();\r\n      }, 300);\r\n    });\r\n  };\r\n\r\n  // ===== UBAH WARNA KALO ARRAY SUDAH TERURUT ====\r\n  const sorted = (arr) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      arr[i].color = color.itIs;\r\n    }\r\n  };\r\n  // ============================================\r\n\r\n  //   ===== ITERATIVE MERGE SORT ====\r\n\r\n  const iterativeMergeSort = async () => {\r\n    setDisable(true);\r\n    // copy array items\r\n    let result = items;\r\n    // set panjang array\r\n    let len = result.length;\r\n    // membuat auxilary array untuk penampung jawaban\r\n    let buffer = auxItems;\r\n    // variabel perubah pseudocode\r\n    let newPseudo = pseudocode;\r\n    let newPseudoIT = pseudocodeIT;\r\n\r\n    // ukuran selalu dikalikan 2\r\n    for (let size = 1; size < len; size *= 2) {\r\n      // Ubah Pseudocode\r\n      await highLightPseudocodeIT(newPseudoIT, 0, null);\r\n      setPseudocodeIT(newPseudoIT);\r\n      // ===================\r\n\r\n      for (let leftStart = 0; leftStart < len; leftStart += 2 * size) {\r\n        // Ubah Pseudocode\r\n        await highLightPseudocodeIT(newPseudoIT, 1, 2);\r\n        setPseudocodeIT(newPseudoIT);\r\n        // ===================\r\n\r\n        // inisiasi index kiri\r\n        let left = leftStart;\r\n\r\n        // inisiasi index kanan\r\n        let right = Math.min(left + size, len);\r\n\r\n        // set limit untuk subarray kiri\r\n        let leftLimit = right;\r\n        // set limit untuk subarray kanan\r\n        let rightLimit = Math.min(right + size, len);\r\n        // iterasi aux\r\n        let i = left;\r\n        setIteratorAux(i);\r\n\r\n        while (left < leftLimit && right < rightLimit) {\r\n          // ubah Pseudo dan penjelasan MEMBANDINGKAN\r\n          await highLightPseudocodeIT(newPseudoIT, 3, null);\r\n          await highLightPseudocode(newPseudo, 0);\r\n          setPseudocodeIT(newPseudoIT);\r\n          setPseudocode(newPseudo);\r\n          await ubahPenjelasan(\"BANDINGKAN\", result[left].val, result[right].val);\r\n          // ========================\r\n\r\n          await changeColor(result, left, color.identify);\r\n          await changeColor(result, right, color.iteration);\r\n          setItems([...result]);\r\n\r\n          if (result[left].val <= result[right].val) {\r\n            // ubah Pseudo dan penjelasan MEMASUKAN ELEMEN SEBELAH KIRI\r\n            await highLightPseudocodeIT(newPseudoIT, 4, 5);\r\n            await highLightPseudocode(newPseudo, 2);\r\n            setPseudocodeIT(newPseudoIT);\r\n            setPseudocode(newPseudo);\r\n            await ubahPenjelasan(\"KIRI1\", result[left].val, result[right].val);\r\n            // ========================\r\n\r\n            // Mengubah ke warna default sebelum dimasukan ke auxilary array\r\n            await changeColor(result, left, color.default);\r\n            setItems([...result]);\r\n\r\n            // ========================\r\n            await new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setIteratorAux(left);\r\n                buffer[i] = result[left];\r\n                setAux([...buffer]);\r\n                resolve();\r\n              }, 1500);\r\n            });\r\n            left++;\r\n            i++;\r\n          } else {\r\n            // ubah Pseudo dan penjelasan MEMASUKAN ELEMEN SEBELAH KANAN\r\n            await highLightPseudocodeIT(newPseudoIT, 6, null);\r\n            await highLightPseudocode(newPseudo, 1);\r\n            setPseudocodeIT([...newPseudoIT]);\r\n            setPseudocode(newPseudo);\r\n            await ubahPenjelasan(\"KANAN1\", result[left].val, result[right].val);\r\n            // ========================\r\n\r\n            // Mengubah ke warna default sebelum dimasukan ke auxilary array\r\n            await changeColor(result, right, color.default);\r\n            setItems([...result]);\r\n            // ========================\r\n\r\n            await new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setIteratorAux(right);\r\n                buffer[i] = result[right];\r\n                setAux([...buffer]);\r\n                resolve();\r\n              }, 1500);\r\n            });\r\n            right++;\r\n            i++;\r\n          }\r\n        }\r\n        // Cek apakah array kiri iterasinya sudah melewati batas atau belum\r\n        while (left < leftLimit) {\r\n          // ubah Pseudo dan penjelasan MEMASUKAN SISA ELEMEN SEBELAH KIRI\r\n          await highLightPseudocodeIT(newPseudoIT, 7, 8);\r\n          await highLightPseudocode(newPseudo, 4);\r\n          setPseudocodeIT(newPseudoIT);\r\n          setPseudocode(newPseudo);\r\n          await ubahPenjelasan(\"KIRI2\", result[left].val, null);\r\n          // ========================\r\n\r\n          // Mengubah ke warna default sebelum dimasukan ke auxilary array\r\n          await changeColor(result, left, color.default);\r\n          setItems([...result]);\r\n          // ========================\r\n\r\n          await new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setIteratorAux(left);\r\n              buffer[i] = result[left];\r\n              setAux([...buffer]);\r\n              left++;\r\n              i++;\r\n              resolve();\r\n            }, 1500);\r\n          });\r\n        }\r\n        // Cek apakah array kanan iterasinya sudah melewati batas atau belum\r\n        while (right < rightLimit) {\r\n          // ubah Pseudo dan penjelasan MEMASUKAN SISA ELEMEN SEBELAH KANAN\r\n          await highLightPseudocodeIT(newPseudoIT, 9, 10);\r\n          await highLightPseudocode(newPseudo, 3);\r\n          setPseudocodeIT(newPseudoIT);\r\n          setPseudocode(newPseudo);\r\n          await ubahPenjelasan(\"KANAN2\", null, result[right].val);\r\n          // ========================\r\n\r\n          // Mengubah ke warna default sebelum dimasukan ke auxilary array\r\n          await changeColor(result, right, color.default);\r\n          setItems([...result]);\r\n          // ========================\r\n\r\n          await new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setIteratorAux(right);\r\n              buffer[i] = result[right];\r\n              setAux([...buffer]);\r\n              right++;\r\n              i++;\r\n              resolve();\r\n            }, 1500);\r\n          });\r\n        }\r\n      }\r\n      // copy auxilary array ke array original\r\n\r\n      // ubah Pseudo dan penjelasan SALIN\r\n      await highLightPseudocodeIT(newPseudoIT, 11, null);\r\n      await highLightPseudocode(newPseudo, 5);\r\n      setPseudocodeIT([...newPseudoIT]);\r\n      setPseudocode(newPseudo);\r\n      await ubahPenjelasan(\"SALIN\", null, null);\r\n      // ========================\r\n\r\n      await new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          result = [...buffer];\r\n          setItems([...result]);\r\n          buffer = new Array([]);\r\n          resetAux();\r\n          resolve();\r\n        }, 500);\r\n      });\r\n    }\r\n    // membuat pseudocode IT default\r\n    await highLightPseudocodeIT(newPseudoIT, null, null);\r\n    setPseudocodeIT(newPseudoIT);\r\n    // ===============================\r\n    await ubahPenjelasan(\"\", null, null);\r\n    sorted(result);\r\n    setItems([...result]);\r\n    return console.log(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mainAnimationContainer\">\r\n          {/* ============== TEMPAT ANIMASI DI TAMPILKAN ============== */}\r\n          <Col className=\"mainAnimationMerge\" lg=\"9\">\r\n            <div className=\"mainAnimationArea\">\r\n              {transition.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"auxArray\">\r\n              {transitionAux.map(({ item, props, key }) => (\r\n                <animated.div key={key} style={props}>\r\n                  <Rectangel id={item.id} val={item.val} color={item.color} h={item.h} scale={item.scale} />\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n          {/* =========================================================== */}\r\n\r\n          {/* ============== TEMPAT DESKRIPSI DAN PSEUDOCODE ==============*/}\r\n          <Col className=\"mainDescription\" lg=\"3\">\r\n            <Row>\r\n              <Col className=\"mainExplanation\">\r\n                <div>\r\n                  <span>{desk}</span>\r\n                  <p>{penjelasan}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col className=\"mainPseudocode\">\r\n                {/* Tombol Toggle */}\r\n\r\n                <Button onClick={() => setPro(!pro)} variant={pro ? \"dark\" : \"light\"} size=\"sm\">\r\n                  {pro ? \"Pro\" : \"Awam\"}\r\n                </Button>\r\n\r\n                {/* Tampilan Pseudocode */}\r\n                <div className=\"wrapper\">\r\n                  {pro\r\n                    ? // Pseudocode untuk orang IT\r\n                      transitionPseudoIT.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocodeIT\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))\r\n                    : // Pseudocode untuk orang awam\r\n\r\n                      transitionPseudo.map(({ item, props, key }) => (\r\n                        <animated.div className=\"itemPseudocode\" key={key} style={props}>\r\n                          {item.text}\r\n                        </animated.div>\r\n                      ))}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {/* =========================================================== */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col className=\"mainInput\">\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl placeholder=\"Input Data\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={input} onChange={handleInput} />\r\n                  <InputGroup.Append>\r\n                    <Button disabled={disable} onClick={iterativeMergeSort} variant={items.length === 0 ? \"outline-secondary\" : \"dark\"}>\r\n                      Sort\r\n                    </Button>\r\n                    <Button disabled={disable2} onClick={emptyArray} variant=\"outline-secondary\">\r\n                      Reset\r\n                    </Button>\r\n                    <Button disabled={input === \"\" ? true : false} onClick={split} variant={items.length === 0 ? \"dark\" : \"outline-secondary\"}>\r\n                      Input\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mainKeterangan\">\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(173, 173, 173)\" h={30} scale={1} />\r\n                <p> Belum Terurut </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"rgb(255, 192, 55)\" h={30} scale={1} />\r\n                <p> Iterasi Array Kiri </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#FF5247\" h={30} scale={1} />\r\n                <p> Iterasi Array Kanan </p>\r\n              </Col>\r\n              <Col className=\"keteranganItem\" lg=\"3\">\r\n                <Rectangel id=\"\" val=\"\" color=\"#3FB1B5\" h={30} scale={1} />\r\n                <p> Terurut</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mainTeoriArea\">\r\n          <Col className=\"mainTeori\" lg=\"9\">\r\n            <div className=\"materiTeori\">\r\n              <h1> Merge Sort</h1>\r\n              <p>\r\n                Merge sort didasarkan pada operasi sederhana yang dikenal sebagai merging, menggabungkan dua array berurutan untuk membuat satu array terurut lebih besar. Operasi ini mengarah ke metode pengurutan rekursif sederhana yang\r\n                dikenal sebagai mergesort untuk mengurutkan array, membaginya menjadi dua bagian, mengurutkan dua bagian (secara rekursif), lalu menggabungkan hasilnya. Keuntungan menggunakan algortima pengurutan ini adalah ia menjamin\r\n                untuk mengurutkan setiap array dengan jumlah N item dalam waktu yang sebanding dengan N log N. Kerugian utamanya adalah ia menggunakan ruang ekstra yang sebanding dengan N.\r\n              </p>\r\n              <div>\r\n                <h5>Kompleksitas</h5>\r\n                <p>\r\n                  Best Case : O(n)\r\n                  <br /> Average Case : O(n log n) <br /> Worst Case : O(n log n)\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"nextMateri\" lg=\"2\">\r\n            <h6>Materi Sorting lainnya</h6>\r\n            <br />\r\n            <Button href=\"#/InsertionSort\">Insertion Sort</Button>\r\n            <Button href=\"#/QuickSort\">Quick Sort</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/nomatch.21d5ebf0.svg\";","import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport \"./Component/style.css\";\r\nimport nomatch from \"./Image/nomatch.svg\";\r\n\r\nexport const NoMatch = () => (\r\n  <Container>\r\n    <Row className=\"justify-content-md-center\">\r\n      <Col className=\"wrapperNoMatch\" lg=\"7\">\r\n        <Image className=\"imgtidakDitemukan\" src={nomatch} />\r\n        <h3>Oops! Halaman tidak ditemukan</h3>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Nav, Navbar, Container, NavDropdown, Modal, Button, Badge, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../Image/WebLogo1.svg\";\r\nimport \"../style.css\";\r\n\r\nexport const NavigationBar = () => {\r\n  // TOGGEL MODAL\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"nav-bar\" bg=\"light\" variant=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand>\r\n            <Link className=\"nav-link brand\" to=\"/\">\r\n              <img src={logo} height=\"40\" width=\"auto\" alt=\"\" />\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <NavDropdown title=\"Struktur Data\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/Stack\">\r\n                    Stack\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/Queue\">\r\n                    Queue\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/PriorityQueue\">\r\n                    Priority Queue\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/DoublyLinkedList\">\r\n                    Doubly Linked List\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <NavDropdown title=\"Algoritma Sorting\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/InsertionSort\">\r\n                    Insertion Sort\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/QuickSort\">\r\n                    Quick Sort\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/MergeSort\">\r\n                    Merge Sort\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <NavDropdown title=\"Algoritma Searching\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/SequentialSearch\">\r\n                    Sequential Search\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item>\r\n                  <Link className=\"nav-link\" to=\"/BinarySearch\">\r\n                    Binary Search\r\n                  </Link>\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button size=\"sm\" variant=\"outline-info\" onClick={() => setShow(true)}>\r\n              Tutorial\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <Modal\r\n        // SETTING MODAL\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-custom-modal-styling-title\">Cara Penggunaan</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"itemModal\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h4>\r\n                  <Badge variant=\"warning\">Untuk Algoritma Sorting dan Searching</Badge>\r\n                </h4>\r\n                <dl>\r\n                  <dt>\r\n                    <h5>Input</h5>\r\n                  </dt>\r\n                  <dd>• Masukan angka yang dipisah menggunakan koma</dd>\r\n                  <dd>\r\n                    <span>contoh : </span> 43,65,79, dst\r\n                  </dd>\r\n                  <dd>\r\n                    • setelah memasukan angka yang diinginkan, tekan tombol <span> Input</span>\r\n                  </dd>\r\n                  {/* >>>>> RULE */}\r\n                  <dd>\r\n                    • <Badge variant=\"danger\">Penting</Badge> khusus untuk <span>Binary Search</span>, input harus angka yang sudah terurut.\r\n                  </dd>\r\n                </dl>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <h4>\r\n                  <Badge variant=\"warning\">Untuk Doubly Linked List</Badge>\r\n                </h4>\r\n                <dl>\r\n                  <dt>\r\n                    <h5>Input</h5>\r\n                  </dt>\r\n                  <dd>• Untuk method add after memiliki 2 parameter. yang pertama adalah posisi yang diingkan dan yang kedua adalah nilai dari node. Masukan input yang dipisahkan dengan koma.</dd>\r\n                  <dd>\r\n                    <span>contoh : </span> 2,5 ; Maka dengan input seperti itu, akan membuat node yang bernilai 5 di posisi ke 2.\r\n                  </dd>\r\n                </dl>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\n//import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./Component/Home/Home\";\nimport Stack from \"./Component/StrukturData/Stack\";\nimport Queue from \"./Component/StrukturData/Queue\";\nimport PriorityQueue from \"./Component/StrukturData/PriorityQueue\";\nimport DoublyLinkedList from \"./Component/StrukturData/DoublyLinkedList\";\nimport BinarySearch from \"./Component/Searching/BinarySearch\";\nimport SequentialSearch from \"./Component/Searching/SequentialSearch\";\nimport InsertionSort from \"./Component/Sort/InsertionSort\";\nimport QuickSort from \"./Component/Sort/QuickSort\";\nimport MergeSort from \"./Component/Sort/MergeSort\";\nimport { NoMatch } from \"./NoMatch\";\nimport { NavigationBar } from \"./Component/Reuseable/NavigationBar\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/Stack\">\n            <Stack />\n          </Route>\n          <Route path=\"/BinarySearch\" component={BinarySearch} />\n          <Route path=\"/Queue\" component={Queue} />\n          <Route path=\"/PriorityQueue\" component={PriorityQueue} />\n          <Route path=\"/DoublyLinkedList\" component={DoublyLinkedList} />\n          <Route path=\"/InsertionSort\" component={InsertionSort} />\n          <Route path=\"/QuickSort\" component={QuickSort} />\n          <Route path=\"/MergeSort\" component={MergeSort} />\n          <Route path=\"/SequentialSearch\" component={SequentialSearch} />\n          <Route component={NoMatch} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}